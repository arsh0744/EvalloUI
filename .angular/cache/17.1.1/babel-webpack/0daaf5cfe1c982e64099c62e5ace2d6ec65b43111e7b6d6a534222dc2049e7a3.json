{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"mdb-angular-ui-kit/forms\";\nimport * as i3 from \"mdb-angular-ui-kit/ripple\";\nimport * as i4 from \"mdb-angular-ui-kit/tabs\";\nimport * as i5 from \"mdb-angular-ui-kit/validation\";\nexport class AppComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.title = 'Welcome to Evallo';\n  }\n  ngOnInit() {\n    this.buildCCRegisForm();\n  }\n  buildCCRegisForm() {\n    this.ccRegisForm = this.fb.group({\n      registerName: ['', [Validators.required]],\n      registerUsername: ['', [Validators.required]],\n      registerEmail: ['', [Validators.required, Validators.email]],\n      registerPassword: ['', [Validators.required]]\n    });\n  }\n  addNewCCForEvallo() {\n    let newUser = {\n      Name: this.ccRegisForm.controls.registerName.value,\n      username: this.ccRegisForm.controls.registerUsername.value,\n      userEmail: this.ccRegisForm.controls.registerEmail.value,\n      userPassword: this.ccRegisForm.controls.registerPassword.value\n    };\n    try {} catch (err) {\n      console.error(err);\n    }\n    console.log(this.ccRegisForm.value);\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 42,\n    vars: 4,\n    consts: [[1, \"container\", \"pt-5\"], [1, \"d-flex\", \"justify-content-center\", \"align-items-center\", \"pt-5\"], [1, \"\"], [1, \"text-center\"], [\"src\", \"https://mdbootstrap.com/img/logo/mdb-transparent-250px.png\", 1, \"mb-4\", 2, \"width\", \"180px\"], [1, \"mb-3\", 2, \"text-align\", \"center\"], [1, \"pillSwitcher\"], [3, \"pills\", \"fill\"], [\"title\", \"Login\"], [1, \"mb-4\"], [\"mdbInput\", \"\", \"type\", \"email\", \"id\", \"loginName\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"loginName\", 1, \"form-label\"], [\"mdbInput\", \"\", \"type\", \"password\", \"id\", \"loginPassword\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"loginPassword\", 1, \"form-label\"], [\"mdbRipple\", \"\", \"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mb-4\"], [\"title\", \"Content Creator Registration\"], [3, \"formGroup\", \"ngSubmit\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"text\", \"id\", \"registerName\", \"formControlName\", \"registerName\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerName\", 1, \"form-label\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"text\", \"id\", \"registerUsername\", \"formControlName\", \"registerUsername\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerUsername\", 1, \"form-label\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"email\", \"id\", \"registerEmail\", \"formControlName\", \"registerEmail\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerEmail\", 1, \"form-label\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"password\", \"id\", \"registerPassword\", \"formControlName\", \"registerPassword\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerPassword\", 1, \"form-label\"], [\"mdbRipple\", \"\", \"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mb-3\", 3, \"disabled\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵelement(4, \"img\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"h5\", 5);\n        i0.ɵɵtext(6, \"Welcome to Evallo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"hr\");\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"mdb-tabs\", 7)(10, \"mdb-tab\", 8)(11, \"form\")(12, \"mdb-form-control\", 9);\n        i0.ɵɵelement(13, \"input\", 10);\n        i0.ɵɵelementStart(14, \"label\", 11);\n        i0.ɵɵtext(15, \"Email or username\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"mdb-form-control\", 9);\n        i0.ɵɵelement(17, \"input\", 12);\n        i0.ɵɵelementStart(18, \"label\", 13);\n        i0.ɵɵtext(19, \"Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"button\", 14);\n        i0.ɵɵtext(21, \" Sign in \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"mdb-tab\", 15)(23, \"form\", 16);\n        i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_23_listener() {\n          return ctx.addNewCCForEvallo();\n        });\n        i0.ɵɵelementStart(24, \"mdb-form-control\", 9);\n        i0.ɵɵelement(25, \"input\", 17);\n        i0.ɵɵelementStart(26, \"label\", 18);\n        i0.ɵɵtext(27, \"Name\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"mdb-form-control\", 9);\n        i0.ɵɵelement(29, \"input\", 19);\n        i0.ɵɵelementStart(30, \"label\", 20);\n        i0.ɵɵtext(31, \"Username\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"mdb-form-control\", 9);\n        i0.ɵɵelement(33, \"input\", 21);\n        i0.ɵɵelementStart(34, \"label\", 22);\n        i0.ɵɵtext(35, \"Email\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"mdb-form-control\", 9);\n        i0.ɵɵelement(37, \"input\", 23);\n        i0.ɵɵelementStart(38, \"label\", 24);\n        i0.ɵɵtext(39, \"Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"button\", 25);\n        i0.ɵɵtext(41, \" Sign Up \");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"pills\", true)(\"fill\", true);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"formGroup\", ctx.ccRegisForm);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"disabled\", !ctx.ccRegisForm.valid);\n      }\n    },\n    dependencies: [i2.MdbFormControlComponent, i2.MdbInputDirective, i2.MdbLabelDirective, i3.MdbRippleDirective, i4.MdbTabComponent, i4.MdbTabsComponent, i5.MdbValidateDirective, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","AppComponent","constructor","fb","title","ngOnInit","buildCCRegisForm","ccRegisForm","group","registerName","required","registerUsername","registerEmail","email","registerPassword","addNewCCForEvallo","newUser","Name","controls","value","username","userEmail","userPassword","err","console","error","log","_","i0","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵlistener","AppComponent_Template_form_ngSubmit_23_listener","ɵɵadvance","ɵɵproperty","valid"],"sources":["F:\\Evallo Project\\mdb-proj\\mdb5-free-angular\\src\\app\\app.component.ts","F:\\Evallo Project\\mdb-proj\\mdb5-free-angular\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserRegistrationModel } from './services/interfaces/interface.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\n\nexport class AppComponent  implements OnInit {\n\n  title = 'Welcome to Evallo';\n  ccRegisForm : FormGroup ;\n\n\n  constructor(private fb: FormBuilder)\n  {\n\n  }\n\n  ngOnInit(): void {\n    this.buildCCRegisForm();\n  }\n\n \n\n  \n\n  private buildCCRegisForm()\n  {\n    this.ccRegisForm = this.fb.group({\n      registerName : ['', [Validators.required]],\n      registerUsername : ['', [Validators.required]],\n      registerEmail: ['', [Validators.required, Validators.email]],\n      registerPassword: ['', [Validators.required]],\n    });\n  }\n\n  addNewCCForEvallo()\n  {\n    let newUser : UserRegistrationModel = \n    {\n      Name : this.ccRegisForm.controls.registerName.value,\n      username: this.ccRegisForm.controls.registerUsername.value,\n      userEmail: this.ccRegisForm.controls.registerEmail.value,\n      userPassword: this.ccRegisForm.controls.registerPassword.value\n    }\n    ;\n\n    try\n    {\n\n    }\n    catch(err)\n    {\n      console.error(err) ;\n    }\n    \n\n    console.log(this.ccRegisForm.value);\n\n\n\n  }\n\n\n\n}\n","<div class=\"container pt-5\">\n  <div class=\"d-flex justify-content-center align-items-center pt-5\">\n    <div class=\"\">\n      <div class=\"text-center\">\n        <img\n          class=\"mb-4\"\n          src=\"https://mdbootstrap.com/img/logo/mdb-transparent-250px.png\"\n          style=\"width: 180px\"\n        />\n      </div>\n      <h5 class=\"mb-3\" style=\"text-align: center;\">Welcome to Evallo</h5>\n\n  \n   \n      <hr />\n \n\n        <div class=\"pillSwitcher\">\n\n          <mdb-tabs [pills]=\"true\" [fill]=\"true\">\n            <mdb-tab title=\"Login\">\n              <form>\n                                \n                <mdb-form-control class=\"mb-4\">\n                  <input mdbInput type=\"email\" id=\"loginName\" class=\"form-control\" />\n                  <label mdbLabel class=\"form-label\" for=\"loginName\">Email or username</label>\n                </mdb-form-control>\n          \n                <mdb-form-control class=\"mb-4\">\n                  <input mdbInput type=\"password\" id=\"loginPassword\" class=\"form-control\" />\n                  <label mdbLabel class=\"form-label\" for=\"loginPassword\">Password</label>\n                </mdb-form-control>\n          \n                        \n                <button mdbRipple type=\"submit\" class=\"btn btn-primary btn-block mb-4\">\n                  Sign in\n                </button>\n          \n                \n              </form></mdb-tab\n            >\n            <mdb-tab title=\"Content Creator Registration\">\n              <form [formGroup]=\"ccRegisForm\" (ngSubmit)=\"addNewCCForEvallo()\">\n                          \n                <mdb-form-control class=\"mb-4\">\n                  <input mdbValidate mdbInput type=\"text\" id=\"registerName\" class=\"form-control\" formControlName=\"registerName\" />\n                  <label mdbLabel class=\"form-label\" for=\"registerName\">Name</label>\n                </mdb-form-control>\n          \n                <mdb-form-control class=\"mb-4\">\n                  <input mdbValidate mdbInput type=\"text\" id=\"registerUsername\" class=\"form-control\" formControlName=\"registerUsername\" />\n                  <label mdbLabel class=\"form-label\" for=\"registerUsername\">Username</label>\n                </mdb-form-control>\n          \n                <mdb-form-control class=\"mb-4\">\n                  <input mdbValidate mdbInput type=\"email\" id=\"registerEmail\" class=\"form-control\" formControlName=\"registerEmail\" />\n                  <label mdbLabel class=\"form-label\" for=\"registerEmail\">Email</label>\n                </mdb-form-control>\n          \n                <mdb-form-control class=\"mb-4\">\n                  <input mdbValidate mdbInput type=\"password\" id=\"registerPassword\" class=\"form-control\" formControlName=\"registerPassword\" />\n                  <label mdbLabel class=\"form-label\" for=\"registerPassword\">Password</label>\n                </mdb-form-control>\n          \n             \n          \n                <button mdbRipple type=\"submit\" [disabled]=\"!ccRegisForm.valid\"\n                  class=\"btn btn-primary btn-block mb-3\">\n                  Sign Up\n                </button>\n              </form></mdb-tab\n            >\n          </mdb-tabs>\n\n\n        </div>\n\n\n\n\n\n\n    </div>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}