{"ast":null,"code":"import _asyncToGenerator from \"F:/Evallo Project/mdb-proj/mdb5-free-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ServerApiService {\n  constructor(http) {\n    this.http = http;\n    this.BaseUrl = \"http://localhost:3000/\";\n    this.url_Create_New_CC = this.BaseUrl + 'api/addNewCC';\n  }\n  addNewEvalloCCFunc(NewUser) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let response;\n      return yield new Pro();\n      try {\n        _this.http.post(_this.url_Create_New_CC, NewUser).subscribe({\n          next: value => {\n            console.log(\"next\", value);\n            response = {\n              Error: null,\n              Message: \"Registered Successfully,Redirecting\"\n            };\n          },\n          error: error => {\n            console.error(\"error\", error);\n            response = {\n              Error: true,\n              Message: \"User Not Registered\"\n            };\n          },\n          complete: () => {\n            console.error(\"complete\");\n          }\n        });\n      } catch (err) {\n        console.error(err);\n        response = {\n          Error: true,\n          Message: \"User Not Registered\"\n        };\n      }\n      return response;\n    })();\n  }\n  static #_ = this.ɵfac = function ServerApiService_Factory(t) {\n    return new (t || ServerApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ServerApiService,\n    factory: ServerApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ServerApiService","constructor","http","BaseUrl","url_Create_New_CC","addNewEvalloCCFunc","NewUser","_this","_asyncToGenerator","response","Pro","post","subscribe","next","value","console","log","Error","Message","error","complete","err","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["F:\\Evallo Project\\mdb-proj\\mdb5-free-angular\\src\\app\\services\\server\\server-api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { UserRegistrationModel } from '../interfaces/interface.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class ServerApiService {\r\n\r\n  constructor(\r\n    private http : HttpClient\r\n  ) { }\r\n  private  BaseUrl =  \"http://localhost:3000/\" ;\r\n\r\n  url_Create_New_CC = this.BaseUrl + \r\n                      'api/addNewCC' ;\r\n\r\n  async addNewEvalloCCFunc(NewUser :UserRegistrationModel )\r\n  {\r\n    let response  ;\r\n\r\n    return await new Pro\r\n\r\n    try\r\n    {\r\n      this.http.post(this.url_Create_New_CC,NewUser).subscribe(\r\n        {\r\n          next: (value) => {\r\n            console.log(\"next\",value) ;\r\n            response = {Error:null,Message: \"Registered Successfully,Redirecting\"} ;\r\n          },\r\n          error: (error) => {\r\n            console.error(\"error\",error) ;\r\n            response = {Error:true,Message: \"User Not Registered\"} ;\r\n          },\r\n          complete: () => {\r\n            console.error(\"complete\") ;\r\n          }\r\n        }\r\n        \r\n      )\r\n    }\r\n    catch(err)\r\n    {\r\n      console.error(err);\r\n      response={Error:true,Message: \"User Not Registered\"};\r\n    }\r\n\r\n\r\n    \r\n    return response ;\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n}\r\n"],"mappings":";;;AASA,OAAM,MAAOA,gBAAgB;EAE3BC,YACUC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;IAEL,KAAAC,OAAO,GAAI,wBAAwB;IAE5C,KAAAC,iBAAiB,GAAG,IAAI,CAACD,OAAO,GACZ,cAAc;EAJ9B;EAMEE,kBAAkBA,CAACC,OAA8B;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAErD,IAAIC,QAAQ;MAEZ,aAAa,IAAIC,GAAG,CAAH,CAAG;MAEpB,IACA;QACEH,KAAI,CAACL,IAAI,CAACS,IAAI,CAACJ,KAAI,CAACH,iBAAiB,EAACE,OAAO,CAAC,CAACM,SAAS,CACtD;UACEC,IAAI,EAAGC,KAAK,IAAI;YACdC,OAAO,CAACC,GAAG,CAAC,MAAM,EAACF,KAAK,CAAC;YACzBL,QAAQ,GAAG;cAACQ,KAAK,EAAC,IAAI;cAACC,OAAO,EAAE;YAAqC,CAAC;UACxE,CAAC;UACDC,KAAK,EAAGA,KAAK,IAAI;YACfJ,OAAO,CAACI,KAAK,CAAC,OAAO,EAACA,KAAK,CAAC;YAC5BV,QAAQ,GAAG;cAACQ,KAAK,EAAC,IAAI;cAACC,OAAO,EAAE;YAAqB,CAAC;UACxD,CAAC;UACDE,QAAQ,EAAEA,CAAA,KAAK;YACbL,OAAO,CAACI,KAAK,CAAC,UAAU,CAAC;UAC3B;SACD,CAEF;OACF,CACD,OAAME,GAAG,EACT;QACEN,OAAO,CAACI,KAAK,CAACE,GAAG,CAAC;QAClBZ,QAAQ,GAAC;UAACQ,KAAK,EAAC,IAAI;UAACC,OAAO,EAAE;QAAqB,CAAC;;MAKtD,OAAOT,QAAQ;IAAE;EACnB;EAAC,QAAAa,CAAA,G;qBA5CUtB,gBAAgB,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhB3B,gBAAgB;IAAA4B,OAAA,EAAhB5B,gBAAgB,CAAA6B,IAAA;IAAAC,UAAA,EAJf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}