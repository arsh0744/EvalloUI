{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ServerApiService {\n  constructor(http) {\n    this.http = http;\n    this.BaseUrl = \"http://localhost:3000/\";\n    this.url_Create_New_CC = this.BaseUrl + 'addNewCC';\n  }\n  addNewEvalloCCFunc(NewUser) {\n    let response = this.http.post(this.url_Create_New_CC, NewUser).subscribe({\n      next: value => {\n        console.log(\"next\", value);\n        return value;\n      },\n      error: error => {\n        console.error(\"error\", error);\n        return;\n      },\n      complete: () => {\n        console.error(\"complete\");\n      }\n    });\n  }\n  static #_ = this.ɵfac = function ServerApiService_Factory(t) {\n    return new (t || ServerApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ServerApiService,\n    factory: ServerApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ServerApiService","constructor","http","BaseUrl","url_Create_New_CC","addNewEvalloCCFunc","NewUser","response","post","subscribe","next","value","console","log","error","complete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["F:\\Evallo Project\\mdb-proj\\mdb5-free-angular\\src\\app\\services\\server\\server-api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { UserRegistrationModel } from '../interfaces/interface.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class ServerApiService {\r\n\r\n  constructor(\r\n    private http : HttpClient\r\n  ) { }\r\n  private  BaseUrl =  \"http://localhost:3000/\" ;\r\n\r\n  url_Create_New_CC = this.BaseUrl + \r\n                      'addNewCC' ;\r\n\r\n  addNewEvalloCCFunc(NewUser :UserRegistrationModel )\r\n  {\r\n    let response \r\n    = this.http.post(this.url_Create_New_CC,NewUser).subscribe(\r\n      {\r\n        next: (value) => {\r\n          console.log(\"next\",value) ;\r\n          return value ;\r\n        },\r\n        error: (error) => {\r\n          console.error(\"error\",error) ;\r\n          return \r\n        },\r\n        complete: () => {\r\n          console.error(\"complete\") ;\r\n        }\r\n      }\r\n      \r\n    )\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n}\r\n"],"mappings":";;AASA,OAAM,MAAOA,gBAAgB;EAE3BC,YACUC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;IAEL,KAAAC,OAAO,GAAI,wBAAwB;IAE5C,KAAAC,iBAAiB,GAAG,IAAI,CAACD,OAAO,GACZ,UAAU;EAJ1B;EAMJE,kBAAkBA,CAACC,OAA8B;IAE/C,IAAIC,QAAQ,GACV,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACJ,iBAAiB,EAACE,OAAO,CAAC,CAACG,SAAS,CACxD;MACEC,IAAI,EAAGC,KAAK,IAAI;QACdC,OAAO,CAACC,GAAG,CAAC,MAAM,EAACF,KAAK,CAAC;QACzB,OAAOA,KAAK;MACd,CAAC;MACDG,KAAK,EAAGA,KAAK,IAAI;QACfF,OAAO,CAACE,KAAK,CAAC,OAAO,EAACA,KAAK,CAAC;QAC5B;MACF,CAAC;MACDC,QAAQ,EAAEA,CAAA,KAAK;QACbH,OAAO,CAACE,KAAK,CAAC,UAAU,CAAC;MAC3B;KACD,CAEF;EACH;EAAC,QAAAE,CAAA,G;qBA7BUhB,gBAAgB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAhBrB,gBAAgB;IAAAsB,OAAA,EAAhBtB,gBAAgB,CAAAuB,IAAA;IAAAC,UAAA,EAJf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}