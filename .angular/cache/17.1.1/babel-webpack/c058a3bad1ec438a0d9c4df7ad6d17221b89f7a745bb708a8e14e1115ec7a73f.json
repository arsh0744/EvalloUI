{"ast":null,"code":"import _asyncToGenerator from \"F:/Evallo Project/mdb-proj/mdb5-free-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet AppComponent = class AppComponent {\n  constructor(fb, server) {\n    this.fb = fb;\n    this.server = server;\n    this.title = 'Welcome to Evallo';\n    this.showLoading = false;\n    this.showErrorMessage = false;\n    this.regsisterationReponse = null;\n  }\n  ngOnInit() {\n    this.buildCCRegisForm();\n  }\n  buildCCRegisForm() {\n    this.ccRegisForm = this.fb.group({\n      registerName: ['', [Validators.required]],\n      registerUsername: ['', [Validators.required]],\n      registerEmail: ['', [Validators.required, Validators.email]],\n      registerPassword: ['', [Validators.required]]\n    });\n  }\n  addNewCCForEvallo() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.showLoading = true;\n      let newUser = {\n        Name: _this.ccRegisForm.controls.registerName.value,\n        username: _this.ccRegisForm.controls.registerUsername.value,\n        userEmail: _this.ccRegisForm.controls.registerEmail.value,\n        userPassword: _this.ccRegisForm.controls.registerPassword.value\n      };\n      try {\n        yield _this.server.addNewEvalloCCFunc(newUser).then(fulfilled => {\n          _this.showErrorMessage = true;\n          _this.regsisterationReponse = fulfilled.Message;\n          _this.showLoading = false;\n        }, rejected => {\n          console.log(rejected, \"rejected\");\n          _this.showErrorMessage = true;\n          _this.regsisterationReponse = rejected.Message;\n          _this.showLoading = false;\n        });\n        setTimeout(() => {\n          _this.showErrorMessage = false;\n        }, 3000);\n      } catch (err) {\n        _this.showLoading = false;\n        console.error(err);\n      }\n      console.log(_this.ccRegisForm.value);\n    })();\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"names":["Component","Validators","AppComponent","constructor","fb","server","title","showLoading","showErrorMessage","regsisterationReponse","ngOnInit","buildCCRegisForm","ccRegisForm","group","registerName","required","registerUsername","registerEmail","email","registerPassword","addNewCCForEvallo","_this","_asyncToGenerator","newUser","Name","controls","value","username","userEmail","userPassword","addNewEvalloCCFunc","then","fulfilled","Message","rejected","console","log","setTimeout","err","error","__decorate","selector","templateUrl","styleUrls"],"sources":["F:\\Evallo Project\\mdb-proj\\mdb5-free-angular\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserRegistrationModel } from './services/interfaces/interface.service';\nimport { ServerApiService } from './services/server/server-api.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\n\nexport class AppComponent  implements OnInit {\n\n  title = 'Welcome to Evallo';\n  ccRegisForm : FormGroup ;\n  showLoading : boolean = false ;\n  showErrorMessage : boolean = false;\n  regsisterationReponse : string = null;\n  regis\n\n\n  constructor(private fb: FormBuilder,private server:ServerApiService)\n  {\n\n  }\n\n  ngOnInit(): void {\n    this.buildCCRegisForm();\n  }\n\n \n\n  \n\n  private buildCCRegisForm()\n  {\n    this.ccRegisForm = this.fb.group({\n      registerName : ['', [Validators.required]],\n      registerUsername : ['', [Validators.required]],\n      registerEmail: ['', [Validators.required, Validators.email]],\n      registerPassword: ['', [Validators.required]],\n    });\n  }\n\n  async addNewCCForEvallo()\n  {\n    this.showLoading = true ;\n    let newUser : UserRegistrationModel = \n    {\n      Name : this.ccRegisForm.controls.registerName.value,\n      username: this.ccRegisForm.controls.registerUsername.value,\n      userEmail: this.ccRegisForm.controls.registerEmail.value,\n      userPassword: this.ccRegisForm.controls.registerPassword.value\n    }\n    ;\n\n    try\n    {\n      await this.server.addNewEvalloCCFunc(newUser).then\n      (\n        (fulfilled:any) =>\n        {\n          this.showErrorMessage = true;\n          this.regsisterationReponse = fulfilled.Message ;\n          this.showLoading = false;\n        },\n        (rejected) =>\n        {\n          console.log(rejected,\"rejected\");\n          this.showErrorMessage = true;\n          this.regsisterationReponse = rejected.Message ;\n          this.showLoading = false;\n\n        }\n      )\n     \n      \n      setTimeout(() => {\n        this.showErrorMessage = false ;\n      }, 3000);\n    }\n    catch(err)\n    {\n      this.showLoading = false;\n      console.error(err) ;\n    }\n  \n    \n\n    console.log(this.ccRegisForm.value);\n\n\n\n  }\n\n\n\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAW5D,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAUvBC,YAAoBC,EAAe,EAASC,MAAuB;IAA/C,KAAAD,EAAE,GAAFA,EAAE;IAAsB,KAAAC,MAAM,GAANA,MAAM;IARlD,KAAAC,KAAK,GAAG,mBAAmB;IAE3B,KAAAC,WAAW,GAAa,KAAK;IAC7B,KAAAC,gBAAgB,GAAa,KAAK;IAClC,KAAAC,qBAAqB,GAAY,IAAI;EAOrC;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,gBAAgB,EAAE;EACzB;EAMQA,gBAAgBA,CAAA;IAEtB,IAAI,CAACC,WAAW,GAAG,IAAI,CAACR,EAAE,CAACS,KAAK,CAAC;MAC/BC,YAAY,EAAG,CAAC,EAAE,EAAE,CAACb,UAAU,CAACc,QAAQ,CAAC,CAAC;MAC1CC,gBAAgB,EAAG,CAAC,EAAE,EAAE,CAACf,UAAU,CAACc,QAAQ,CAAC,CAAC;MAC9CE,aAAa,EAAE,CAAC,EAAE,EAAE,CAAChB,UAAU,CAACc,QAAQ,EAAEd,UAAU,CAACiB,KAAK,CAAC,CAAC;MAC5DC,gBAAgB,EAAE,CAAC,EAAE,EAAE,CAAClB,UAAU,CAACc,QAAQ,CAAC;KAC7C,CAAC;EACJ;EAEMK,iBAAiBA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAErBD,KAAI,CAACd,WAAW,GAAG,IAAI;MACvB,IAAIgB,OAAO,GACX;QACEC,IAAI,EAAGH,KAAI,CAACT,WAAW,CAACa,QAAQ,CAACX,YAAY,CAACY,KAAK;QACnDC,QAAQ,EAAEN,KAAI,CAACT,WAAW,CAACa,QAAQ,CAACT,gBAAgB,CAACU,KAAK;QAC1DE,SAAS,EAAEP,KAAI,CAACT,WAAW,CAACa,QAAQ,CAACR,aAAa,CAACS,KAAK;QACxDG,YAAY,EAAER,KAAI,CAACT,WAAW,CAACa,QAAQ,CAACN,gBAAgB,CAACO;OAC1D;MAGD,IACA;QACE,MAAML,KAAI,CAAChB,MAAM,CAACyB,kBAAkB,CAACP,OAAO,CAAC,CAACQ,IAAI,CAE/CC,SAAa,IAAI;UAEhBX,KAAI,CAACb,gBAAgB,GAAG,IAAI;UAC5Ba,KAAI,CAACZ,qBAAqB,GAAGuB,SAAS,CAACC,OAAO;UAC9CZ,KAAI,CAACd,WAAW,GAAG,KAAK;QAC1B,CAAC,EACA2B,QAAQ,IAAI;UAEXC,OAAO,CAACC,GAAG,CAACF,QAAQ,EAAC,UAAU,CAAC;UAChCb,KAAI,CAACb,gBAAgB,GAAG,IAAI;UAC5Ba,KAAI,CAACZ,qBAAqB,GAAGyB,QAAQ,CAACD,OAAO;UAC7CZ,KAAI,CAACd,WAAW,GAAG,KAAK;QAE1B,CAAC,CACF;QAGD8B,UAAU,CAAC,MAAK;UACdhB,KAAI,CAACb,gBAAgB,GAAG,KAAK;QAC/B,CAAC,EAAE,IAAI,CAAC;OACT,CACD,OAAM8B,GAAG,EACT;QACEjB,KAAI,CAACd,WAAW,GAAG,KAAK;QACxB4B,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;;MAKpBH,OAAO,CAACC,GAAG,CAACf,KAAI,CAACT,WAAW,CAACc,KAAK,CAAC;IAAC;EAItC;CAID;AAtFYxB,YAAY,GAAAsC,UAAA,EAPxBxC,SAAS,CAAC;EACTyC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EAGWzC,YAAY,CAsFxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}