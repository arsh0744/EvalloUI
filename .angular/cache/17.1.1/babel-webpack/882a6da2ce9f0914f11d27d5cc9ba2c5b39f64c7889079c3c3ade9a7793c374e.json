{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class UserService {\n  constructor() {\n    this.activeUserIdSubject = new BehaviorSubject(null);\n    this.activeUserIdObservble = this.activeUserIdSubject.asObservable();\n  }\n  changeActiveUserId(change) {\n    console.log(\"changei\", b);\n    this.activeUserIdSubject.next(change);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","UserService","constructor","activeUserIdSubject","activeUserIdObservble","asObservable","changeActiveUserId","change","console","log","b","next","_","_2","factory","ɵfac","providedIn"],"sources":["F:\\Evallo Project\\mdb-proj\\mdb5-free-angular\\src\\app\\services\\userMgmt\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n\r\n  private activeUserIdSubject = new BehaviorSubject<string>(null);\r\n  public activeUserIdObservble = this.activeUserIdSubject.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  changeActiveUserId(change:string)\r\n  {\r\n    console.log(\"changei\",b)\r\n    this.activeUserIdSubject.next(change) ;\r\n  }\r\n\r\n}\r\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,WAAW;EAMtBC,YAAA;IAHQ,KAAAC,mBAAmB,GAAG,IAAIH,eAAe,CAAS,IAAI,CAAC;IACxD,KAAAI,qBAAqB,GAAG,IAAI,CAACD,mBAAmB,CAACE,YAAY,EAAE;EAEtD;EAEhBC,kBAAkBA,CAACC,MAAa;IAE9BC,OAAO,CAACC,GAAG,CAAC,SAAS,EAACC,CAAC,CAAC;IACxB,IAAI,CAACP,mBAAmB,CAACQ,IAAI,CAACJ,MAAM,CAAC;EACvC;EAAC,QAAAK,CAAA,G;qBAZUX,WAAW;EAAA;EAAA,QAAAY,EAAA,G;WAAXZ,WAAW;IAAAa,OAAA,EAAXb,WAAW,CAAAc,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}