{"ast":null,"code":"import _asyncToGenerator from \"F:/Evallo Project/mdb-proj/mdb5-free-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./services/server/server-api.service\";\nimport * as i3 from \"@angular/router\";\nexport class AppComponent {\n  constructor(fb, server, router) {\n    this.fb = fb;\n    this.server = server;\n    this.router = router;\n    this.title = 'Welcome to Evallo';\n    this.showLoading = false;\n    this.showErrorMessage = false;\n    this.regsisterationReponse = null;\n    this.registerError = false;\n  }\n  ngOnInit() {\n    this.buildCCRegisForm();\n    this.buildLoginForm();\n  }\n  buildCCRegisForm() {\n    this.ccRegisForm = this.fb.group({\n      registerName: ['', [Validators.required]],\n      registerUsername: ['', [Validators.required]],\n      registerEmail: ['', [Validators.required, Validators.email]],\n      registerPassword: ['', [Validators.required]]\n    });\n  }\n  buildLoginForm() {\n    this.loginForm = this.fb.group({\n      loginCred: ['', [Validators.required]],\n      loginPass: ['', [Validators.required]]\n    });\n  }\n  callLoginApi() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.showLoading = true;\n      let userCreds = {\n        identifier: _this.loginForm.controls.loginCred.value,\n        password: _this.loginForm.controls.loginPass.value\n      };\n      try {\n        yield _this.server.callLoginApi(userCreds).then(fulfilled => {\n          _this.regsisterationReponse = fulfilled.Message;\n          _this.showLoading = false;\n          _this.registerError = false;\n          _this.router.navigateByUrl('/cc-dashboard');\n        }, rejected => {\n          console.log(rejected, \"rejected\");\n          _this.showErrorMessage = true;\n          _this.regsisterationReponse = rejected.Message;\n          _this.showLoading = false;\n          _this.registerError = true;\n          setTimeout(() => {\n            _this.showErrorMessage = false;\n          }, 3000);\n        });\n      } catch (err) {\n        _this.showLoading = false;\n        console.error(err);\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ServerApiService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 1,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"router-outlet\");\n      }\n    },\n    dependencies: [i3.RouterOutlet],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","AppComponent","constructor","fb","server","router","title","showLoading","showErrorMessage","regsisterationReponse","registerError","ngOnInit","buildCCRegisForm","buildLoginForm","ccRegisForm","group","registerName","required","registerUsername","registerEmail","email","registerPassword","loginForm","loginCred","loginPass","callLoginApi","_this","_asyncToGenerator","userCreds","identifier","controls","value","password","then","fulfilled","Message","navigateByUrl","rejected","console","log","setTimeout","err","error","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","ServerApiService","i3","Router","_2","selectors","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵelement"],"sources":["F:\\Evallo Project\\mdb-proj\\mdb5-free-angular\\src\\app\\app.component.ts","F:\\Evallo Project\\mdb-proj\\mdb5-free-angular\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserRegistrationModel } from './services/interfaces/interface.service';\nimport { ServerApiService } from './services/server/server-api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\n\nexport class AppComponent  implements OnInit {\n\n  title = 'Welcome to Evallo';\n  ccRegisForm : FormGroup ;\n  showLoading : boolean = false ;\n  showErrorMessage : boolean = false;\n  regsisterationReponse : string = null;\n  registerError : boolean = false ;\n\n  loginForm : FormGroup;\n\n\n  constructor(\n    private fb: FormBuilder,\n    private server:ServerApiService,\n    private router : Router\n    )\n  {\n\n  }\n\n  ngOnInit(): void {\n    this.buildCCRegisForm();\n    this.buildLoginForm();\n  }\n\n \n\n  \n\n  private buildCCRegisForm()\n  {\n    this.ccRegisForm = this.fb.group({\n      registerName : ['', [Validators.required]],\n      registerUsername : ['', [Validators.required]],\n      registerEmail: ['', [Validators.required, Validators.email]],\n      registerPassword: ['', [Validators.required]],\n    });\n  }\n  private buildLoginForm()\n  {\n    this.loginForm = this.fb.group({\n      loginCred : ['', [Validators.required]],\n      loginPass : ['', [Validators.required]],\n    });\n  }\n\n \n\n  async callLoginApi()\n  {\n    this.showLoading = true ;\n    let userCreds = \n    {\n      identifier : this.loginForm.controls.loginCred.value,\n      password: this.loginForm.controls.loginPass.value\n    }\n    ;\n\n    try\n    {\n      await this.server.callLoginApi(userCreds).then\n      (\n        (fulfilled:any) =>\n        {\n          this.regsisterationReponse = fulfilled.Message ;\n          this.showLoading = false;\n          this.registerError = false;\n          this.router.navigateByUrl('/cc-dashboard')\n\n        },\n        (rejected) =>\n        {\n          console.log(rejected,\"rejected\");\n          this.showErrorMessage = true;\n          this.regsisterationReponse = rejected.Message ;\n          this.showLoading = false;\n          this.registerError = true;\n          setTimeout(() => {\n            this.showErrorMessage = false ;\n          }, 3000);\n\n        }\n      )\n     \n      \n      \n    }\n    catch(err)\n    {\n      this.showLoading = false;\n      console.error(err) ;\n    }\n    \n  }\n\n\n\n}\n","\n\n<router-outlet>\n\n</router-outlet>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}