{"ast":null,"code":"import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Directive, Input, Output, HostBinding, HostListener, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nconst MDB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define\n  useExisting: forwardRef(() => MdbCheckboxDirective),\n  multi: true\n};\nclass MdbCheckboxChange {\n  element;\n  checked;\n}\nlet MdbCheckboxDirective = /*#__PURE__*/(() => {\n  class MdbCheckboxDirective {\n    get checked() {\n      return this._checked;\n    }\n    set checked(value) {\n      this._checked = coerceBooleanProperty(value);\n    }\n    _checked = false;\n    get value() {\n      return this._value;\n    }\n    set value(value) {\n      this._value = value;\n    }\n    _value = null;\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    _disabled = false;\n    checkboxChange = new EventEmitter();\n    get isDisabled() {\n      return this._disabled;\n    }\n    get isChecked() {\n      return this._checked;\n    }\n    onCheckboxClick() {\n      this.toggle();\n    }\n    onBlur() {\n      this.onTouched();\n    }\n    constructor() {}\n    get changeEvent() {\n      const newChangeEvent = new MdbCheckboxChange();\n      newChangeEvent.element = this;\n      newChangeEvent.checked = this.checked;\n      return newChangeEvent;\n    }\n    toggle() {\n      if (this.disabled) {\n        return;\n      }\n      this._checked = !this._checked;\n      this.onChange(this.checked);\n      this.onCheckboxChange();\n    }\n    onCheckboxChange() {\n      this.checkboxChange.emit(this.changeEvent);\n    }\n    // Control Value Accessor Methods\n    onChange = _ => {};\n    onTouched = () => {};\n    writeValue(value) {\n      this.value = value;\n      this.checked = !!value;\n    }\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    static ngAcceptInputType_checked;\n    static ngAcceptInputType_disabled;\n    static ɵfac = function MdbCheckboxDirective_Factory(t) {\n      return new (t || MdbCheckboxDirective)();\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MdbCheckboxDirective,\n      selectors: [[\"\", \"mdbCheckbox\", \"\"]],\n      hostVars: 2,\n      hostBindings: function MdbCheckboxDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function MdbCheckboxDirective_click_HostBindingHandler() {\n            return ctx.onCheckboxClick();\n          })(\"blur\", function MdbCheckboxDirective_blur_HostBindingHandler() {\n            return ctx.onBlur();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"disabled\", ctx.isDisabled)(\"checked\", ctx.isChecked);\n        }\n      },\n      inputs: {\n        checked: \"checked\",\n        value: \"value\",\n        disabled: \"disabled\"\n      },\n      outputs: {\n        checkboxChange: \"checkboxChange\"\n      },\n      features: [i0.ɵɵProvidersFeature([MDB_CHECKBOX_VALUE_ACCESSOR])]\n    });\n  }\n  return MdbCheckboxDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MdbCheckboxModule = /*#__PURE__*/(() => {\n  class MdbCheckboxModule {\n    static ɵfac = function MdbCheckboxModule_Factory(t) {\n      return new (t || MdbCheckboxModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MdbCheckboxModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, FormsModule]\n    });\n  }\n  return MdbCheckboxModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MDB_CHECKBOX_VALUE_ACCESSOR, MdbCheckboxChange, MdbCheckboxDirective, MdbCheckboxModule };\n//# sourceMappingURL=mdb-angular-ui-kit-checkbox.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}