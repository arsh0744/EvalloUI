{"ast":null,"code":"import _asyncToGenerator from \"F:/Evallo Project/mdb-proj/mdb5-free-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { MdbFormsModule } from 'mdb-angular-ui-kit/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"mdb-angular-ui-kit/forms\";\nfunction MainPageComponent_button_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 28);\n    i0.ɵɵtext(1, \" Sign in \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.loginForm.valid);\n  }\n}\nfunction MainPageComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\", 30)(2, \"span\", 31);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction MainPageComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r2.registerError ? \"text-danger\" : \"text-success\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r2.regsisterationReponse);\n  }\n}\nfunction MainPageComponent_button_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 33);\n    i0.ɵɵtext(1, \" Sign Up \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r3.ccRegisForm.valid);\n  }\n}\nfunction MainPageComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\", 30)(2, \"span\", 31);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction MainPageComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r5.registerError ? \"text-danger\" : \"text-success\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r5.regsisterationReponse);\n  }\n}\nexport class MainPageComponent {\n  constructor() {\n    this.title = 'Welcome to Evallo';\n    this.showLoading = false;\n    this.showErrorMessage = false;\n    this.regsisterationReponse = null;\n    this.registerError = false;\n  }\n  addNewCCForEvallo() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.showLoading = true;\n      let newUser = {\n        Name: _this.ccRegisForm.controls.registerName.value,\n        username: _this.ccRegisForm.controls.registerUsername.value,\n        userEmail: _this.ccRegisForm.controls.registerEmail.value,\n        userPassword: _this.ccRegisForm.controls.registerPassword.value\n      };\n      try {\n        yield _this.server.addNewEvalloCCFunc(newUser).then(fulfilled => {\n          _this.showErrorMessage = true;\n          _this.regsisterationReponse = fulfilled.Message;\n          _this.showLoading = false;\n          _this.registerError = false;\n        }, rejected => {\n          console.log(rejected, \"rejected\");\n          _this.showErrorMessage = true;\n          _this.regsisterationReponse = rejected.Message;\n          _this.showLoading = false;\n          _this.registerError = true;\n        });\n        setTimeout(() => {\n          _this.showErrorMessage = false;\n          _this.router.navigateByUrl('/cc-dashboard');\n        }, 3000);\n      } catch (err) {\n        _this.showLoading = false;\n        console.error(err);\n      }\n    })();\n  }\n  callLoginApi() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.showLoading = true;\n      let userCreds = {\n        identifier: _this2.loginForm.controls.loginCred.value,\n        password: _this2.loginForm.controls.loginPass.value\n      };\n      try {\n        yield _this2.server.callLoginApi(userCreds).then(fulfilled => {\n          _this2.regsisterationReponse = fulfilled.Message;\n          _this2.showLoading = false;\n          _this2.registerError = false;\n          _this2.router.navigateByUrl('/cc-dashboard');\n        }, rejected => {\n          console.log(rejected, \"rejected\");\n          _this2.showErrorMessage = true;\n          _this2.regsisterationReponse = rejected.Message;\n          _this2.showLoading = false;\n          _this2.registerError = true;\n          setTimeout(() => {\n            _this2.showErrorMessage = false;\n          }, 3000);\n        });\n      } catch (err) {\n        _this2.showLoading = false;\n        console.error(err);\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function MainPageComponent_Factory(t) {\n    return new (t || MainPageComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MainPageComponent,\n    selectors: [[\"app-main-page\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 44,\n    vars: 10,\n    consts: [[1, \"container\", \"pt-5\"], [1, \"d-flex\", \"justify-content-center\", \"align-items-center\", \"pt-5\"], [1, \"\"], [1, \"text-center\"], [\"src\", \"https://mdbootstrap.com/img/logo/mdb-transparent-250px.png\", 1, \"mb-4\", 2, \"width\", \"180px\"], [1, \"mb-3\", 2, \"text-align\", \"center\"], [1, \"pillSwitcher\"], [3, \"pills\", \"fill\"], [\"title\", \"Login\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-4\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"email\", \"formControlName\", \"loginCred\", 1, \"form-control\"], [\"mdbValidate\", \"\", \"mdbLabel\", \"\", \"for\", \"loginName\", 1, \"form-label\"], [\"mdbInput\", \"\", \"type\", \"password\", \"formControlName\", \"loginPass\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"loginPassword\", 1, \"form-label\"], [\"mdbRipple\", \"\", \"type\", \"submit\", \"class\", \"btn btn-primary btn-block mb-4\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"row\", \"style\", \"display: flex; \\n                  justify-content: center;\", 4, \"ngIf\"], [\"class\", \"row\", \"style\", \"display: flex; \\n                  justify-content: center;text-align: center;\", 4, \"ngIf\"], [\"title\", \"Content Creator Registration\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"text\", \"formControlName\", \"registerName\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerName\", 1, \"form-label\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"text\", \"formControlName\", \"registerUsername\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerUsername\", 1, \"form-label\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"email\", \"formControlName\", \"registerEmail\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerEmail\", 1, \"form-label\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"password\", \"formControlName\", \"registerPassword\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerPassword\", 1, \"form-label\"], [\"mdbRipple\", \"\", \"type\", \"submit\", \"class\", \"btn btn-primary btn-block mb-3\", 3, \"disabled\", 4, \"ngIf\"], [\"mdbRipple\", \"\", \"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mb-4\", 3, \"disabled\"], [1, \"row\", 2, \"display\", \"flex\", \"justify-content\", \"center\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\", 2, \"display\", \"flex\", \"justify-content\", \"center\"], [1, \"visually-hidden\"], [1, \"row\", 2, \"display\", \"flex\", \"justify-content\", \"center\", \"text-align\", \"center\"], [\"mdbRipple\", \"\", \"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mb-3\", 3, \"disabled\"]],\n    template: function MainPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵelement(4, \"img\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"h5\", 5);\n        i0.ɵɵtext(6, \"Welcome to Evallo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"hr\");\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"mdb-tabs\", 7)(10, \"mdb-tab\", 8)(11, \"form\", 9);\n        i0.ɵɵlistener(\"ngSubmit\", function MainPageComponent_Template_form_ngSubmit_11_listener() {\n          return ctx.callLoginApi();\n        });\n        i0.ɵɵelementStart(12, \"mdb-form-control\", 10);\n        i0.ɵɵelement(13, \"input\", 11);\n        i0.ɵɵelementStart(14, \"label\", 12);\n        i0.ɵɵtext(15, \"Email or username\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"mdb-form-control\", 10);\n        i0.ɵɵelement(17, \"input\", 13);\n        i0.ɵɵelementStart(18, \"label\", 14);\n        i0.ɵɵtext(19, \"Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(20, MainPageComponent_button_20_Template, 2, 1, \"button\", 15)(21, MainPageComponent_div_21_Template, 4, 0, \"div\", 16)(22, MainPageComponent_div_22_Template, 3, 4, \"div\", 17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"mdb-tab\", 18)(24, \"form\", 9);\n        i0.ɵɵlistener(\"ngSubmit\", function MainPageComponent_Template_form_ngSubmit_24_listener() {\n          return ctx.addNewCCForEvallo();\n        });\n        i0.ɵɵelementStart(25, \"mdb-form-control\", 10);\n        i0.ɵɵelement(26, \"input\", 19);\n        i0.ɵɵelementStart(27, \"label\", 20);\n        i0.ɵɵtext(28, \"Name\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"mdb-form-control\", 10);\n        i0.ɵɵelement(30, \"input\", 21);\n        i0.ɵɵelementStart(31, \"label\", 22);\n        i0.ɵɵtext(32, \"Username\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"mdb-form-control\", 10);\n        i0.ɵɵelement(34, \"input\", 23);\n        i0.ɵɵelementStart(35, \"label\", 24);\n        i0.ɵɵtext(36, \"Email\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"mdb-form-control\", 10);\n        i0.ɵɵelement(38, \"input\", 25);\n        i0.ɵɵelementStart(39, \"label\", 26);\n        i0.ɵɵtext(40, \"Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(41, MainPageComponent_button_41_Template, 2, 1, \"button\", 27)(42, MainPageComponent_div_42_Template, 4, 0, \"div\", 16)(43, MainPageComponent_div_43_Template, 3, 4, \"div\", 17);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"pills\", true)(\"fill\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.showLoading == false);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.showLoading == true);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.showErrorMessage == true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.ccRegisForm);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngIf\", ctx.showLoading == false);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.showLoading == true);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.showErrorMessage == true);\n      }\n    },\n    dependencies: [MdbFormsModule, i1.MdbFormControlComponent, i1.MdbInputDirective, i1.MdbLabelDirective],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["MdbFormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","loginForm","valid","ɵɵadvance","ɵɵclassMap","ctx_r2","registerError","ɵɵtextInterpolate","regsisterationReponse","ctx_r3","ccRegisForm","ctx_r5","MainPageComponent","constructor","title","showLoading","showErrorMessage","addNewCCForEvallo","_this","_asyncToGenerator","newUser","Name","controls","registerName","value","username","registerUsername","userEmail","registerEmail","userPassword","registerPassword","server","addNewEvalloCCFunc","then","fulfilled","Message","rejected","console","log","setTimeout","router","navigateByUrl","err","error","callLoginApi","_this2","userCreds","identifier","loginCred","password","loginPass","_","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","MainPageComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","MainPageComponent_Template_form_ngSubmit_11_listener","ɵɵtemplate","MainPageComponent_button_20_Template","MainPageComponent_div_21_Template","MainPageComponent_div_22_Template","MainPageComponent_Template_form_ngSubmit_24_listener","MainPageComponent_button_41_Template","MainPageComponent_div_42_Template","MainPageComponent_div_43_Template","i1","MdbFormControlComponent","MdbInputDirective","MdbLabelDirective","styles"],"sources":["F:\\Evallo Project\\mdb-proj\\mdb5-free-angular\\src\\app\\main-page\\main-page.component.ts","F:\\Evallo Project\\mdb-proj\\mdb5-free-angular\\src\\app\\main-page\\main-page.component.html"],"sourcesContent":["import { CUSTOM_ELEMENTS_SCHEMA, Component } from '@angular/core';\r\n// MDB Modules\r\nimport { MdbAccordionModule } from 'mdb-angular-ui-kit/accordion';\r\nimport { MdbCarouselModule } from 'mdb-angular-ui-kit/carousel';\r\nimport { MdbCheckboxModule } from 'mdb-angular-ui-kit/checkbox';\r\nimport { MdbCollapseModule } from 'mdb-angular-ui-kit/collapse';\r\nimport { MdbDropdownModule } from 'mdb-angular-ui-kit/dropdown';\r\nimport { MdbFormsModule } from 'mdb-angular-ui-kit/forms';\r\nimport { MdbModalModule } from 'mdb-angular-ui-kit/modal';\r\nimport { MdbPopoverModule } from 'mdb-angular-ui-kit/popover';\r\nimport { MdbRadioModule } from 'mdb-angular-ui-kit/radio';\r\nimport { MdbRangeModule } from 'mdb-angular-ui-kit/range';\r\nimport { MdbRippleModule } from 'mdb-angular-ui-kit/ripple';\r\nimport { MdbScrollspyModule } from 'mdb-angular-ui-kit/scrollspy';\r\nimport { MdbTabsModule } from 'mdb-angular-ui-kit/tabs';\r\nimport { MdbTooltipModule } from 'mdb-angular-ui-kit/tooltip';\r\nimport { MdbValidationModule } from 'mdb-angular-ui-kit/validation';\r\n\r\n@Component({\r\n  selector: 'app-main-page',\r\n  standalone: true,\r\n  imports: [\r\n    MdbFormsModule\r\n  ],\r\n  templateUrl: './main-page.component.html',\r\n  styleUrl: './main-page.component.scss',\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class MainPageComponent {\r\n\r\n  title = 'Welcome to Evallo';\r\n  ccRegisForm : FormGroup ;\r\n  showLoading : boolean = false ;\r\n  showErrorMessage : boolean = false;\r\n  regsisterationReponse : string = null;\r\n  registerError : boolean = false ;\r\n\r\n  loginForm : FormGroup;\r\n\r\n  constructor()\r\n\r\n\r\n\r\n  async addNewCCForEvallo()\r\n  {\r\n    this.showLoading = true ;\r\n    let newUser : UserRegistrationModel = \r\n    {\r\n      Name : this.ccRegisForm.controls.registerName.value,\r\n      username: this.ccRegisForm.controls.registerUsername.value,\r\n      userEmail: this.ccRegisForm.controls.registerEmail.value,\r\n      userPassword: this.ccRegisForm.controls.registerPassword.value\r\n    }\r\n    ;\r\n\r\n    try\r\n    {\r\n      await this.server.addNewEvalloCCFunc(newUser).then\r\n      (\r\n        (fulfilled:any) =>\r\n        {\r\n          this.showErrorMessage = true;\r\n          this.regsisterationReponse = fulfilled.Message ;\r\n          this.showLoading = false;\r\n          this.registerError = false;\r\n        },\r\n        (rejected) =>\r\n        {\r\n          console.log(rejected,\"rejected\");\r\n          this.showErrorMessage = true;\r\n          this.regsisterationReponse = rejected.Message ;\r\n          this.showLoading = false;\r\n          this.registerError = true;\r\n\r\n        }\r\n      )\r\n     \r\n      \r\n      setTimeout(() => {\r\n        this.showErrorMessage = false ;\r\n        this.router.navigateByUrl('/cc-dashboard')\r\n      }, 3000);\r\n    }\r\n    catch(err)\r\n    {\r\n      this.showLoading = false;\r\n      console.error(err) ;\r\n    }\r\n  \r\n    \r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  async callLoginApi()\r\n  {\r\n    this.showLoading = true ;\r\n    let userCreds = \r\n    {\r\n      identifier : this.loginForm.controls.loginCred.value,\r\n      password: this.loginForm.controls.loginPass.value\r\n    }\r\n    ;\r\n\r\n    try\r\n    {\r\n      await this.server.callLoginApi(userCreds).then\r\n      (\r\n        (fulfilled:any) =>\r\n        {\r\n          this.regsisterationReponse = fulfilled.Message ;\r\n          this.showLoading = false;\r\n          this.registerError = false;\r\n          this.router.navigateByUrl('/cc-dashboard')\r\n\r\n        },\r\n        (rejected) =>\r\n        {\r\n          console.log(rejected,\"rejected\");\r\n          this.showErrorMessage = true;\r\n          this.regsisterationReponse = rejected.Message ;\r\n          this.showLoading = false;\r\n          this.registerError = true;\r\n          setTimeout(() => {\r\n            this.showErrorMessage = false ;\r\n          }, 3000);\r\n\r\n        }\r\n      )\r\n     \r\n      \r\n      \r\n    }\r\n    catch(err)\r\n    {\r\n      this.showLoading = false;\r\n      console.error(err) ;\r\n    }\r\n    \r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container pt-5\">\r\n    <div class=\"d-flex justify-content-center align-items-center pt-5\">\r\n      <div class=\"\">\r\n        <div class=\"text-center\">\r\n          <img\r\n            class=\"mb-4\"\r\n            src=\"https://mdbootstrap.com/img/logo/mdb-transparent-250px.png\"\r\n            style=\"width: 180px\"\r\n          />\r\n        </div>\r\n        <h5 class=\"mb-3\" style=\"text-align: center;\">Welcome to Evallo</h5>\r\n  \r\n    \r\n     \r\n        <hr />\r\n   \r\n  \r\n          <div class=\"pillSwitcher\">\r\n  \r\n            <mdb-tabs [pills]=\"true\" [fill]=\"true\">\r\n              <mdb-tab title=\"Login\">\r\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"callLoginApi()\">\r\n                                  \r\n                  <mdb-form-control class=\"mb-4\">\r\n                    <input mdbValidate mdbInput type=\"email\"  class=\"form-control\" formControlName=\"loginCred\" />\r\n                    <label mdbValidate mdbLabel class=\"form-label\" for=\"loginName\">Email or username</label>\r\n                  </mdb-form-control>\r\n            \r\n                  <mdb-form-control class=\"mb-4\">\r\n                    <input mdbInput type=\"password\"  class=\"form-control\" formControlName=\"loginPass\"/>\r\n                    <label mdbLabel class=\"form-label\" for=\"loginPassword\">Password</label>\r\n                  </mdb-form-control>\r\n            \r\n                          \r\n                  <button mdbRipple [disabled]=\"!loginForm.valid\" *ngIf=\"showLoading==false\"\r\n                   type=\"submit\" class=\"btn btn-primary btn-block mb-4\">\r\n                    Sign in\r\n                  </button>\r\n                  <div class=\"row\" style=\"display: flex; \r\n                  justify-content: center;\" *ngIf=\"showLoading==true\">\r\n                    <div class=\"spinner-border text-primary\" role=\"status\" style=\"display: flex;justify-content: center;\">\r\n                      <span class=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\" style=\"display: flex; \r\n                  justify-content: center;text-align: center;\" *ngIf=\"showErrorMessage==true\" >\r\n                    \r\n                      <span class=\"{{registerError?'text-danger':'text-success'}}\">{{regsisterationReponse}}</span>\r\n                    \r\n                  </div>\r\n            \r\n                  \r\n                </form></mdb-tab\r\n              >\r\n              <mdb-tab title=\"Content Creator Registration\">\r\n                <form [formGroup]=\"ccRegisForm\" (ngSubmit)=\"addNewCCForEvallo()\">\r\n                            \r\n                  <mdb-form-control class=\"mb-4\">\r\n                    <input mdbValidate mdbInput type=\"text\"  class=\"form-control\" formControlName=\"registerName\" />\r\n                    <label mdbLabel class=\"form-label\" for=\"registerName\">Name</label>\r\n                  </mdb-form-control>\r\n            \r\n                  <mdb-form-control class=\"mb-4\">\r\n                    <input mdbValidate mdbInput type=\"text\"  class=\"form-control\" formControlName=\"registerUsername\" />\r\n                    <label mdbLabel class=\"form-label\" for=\"registerUsername\">Username</label>\r\n                  </mdb-form-control>\r\n            \r\n                  <mdb-form-control class=\"mb-4\">\r\n                    <input mdbValidate mdbInput type=\"email\"  class=\"form-control\" formControlName=\"registerEmail\" />\r\n                    <label mdbLabel class=\"form-label\" for=\"registerEmail\">Email</label>\r\n                  </mdb-form-control>\r\n            \r\n                  <mdb-form-control class=\"mb-4\" >\r\n                    <input mdbValidate mdbInput type=\"password\"  class=\"form-control\" formControlName=\"registerPassword\" />\r\n                    <label mdbLabel class=\"form-label\" for=\"registerPassword\">Password</label>\r\n                  </mdb-form-control>\r\n            \r\n               \r\n            \r\n                  <button mdbRipple type=\"submit\" [disabled]=\"!ccRegisForm.valid\" *ngIf=\"showLoading==false\"\r\n                    class=\"btn btn-primary btn-block mb-3\">\r\n                    Sign Up\r\n                  </button>\r\n                  <div class=\"row\" style=\"display: flex; \r\n                  justify-content: center;\" *ngIf=\"showLoading==true\">\r\n                    <div class=\"spinner-border text-primary\" role=\"status\" style=\"display: flex;justify-content: center;\">\r\n                      <span class=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\" style=\"display: flex; \r\n                  justify-content: center;text-align: center;\" *ngIf=\"showErrorMessage==true\" >\r\n                    \r\n                      <span class=\"{{registerError?'text-danger':'text-success'}}\">{{regsisterationReponse}}</span>\r\n                    \r\n                  </div>\r\n  \r\n                  \r\n                </form></mdb-tab\r\n              >\r\n            </mdb-tabs>\r\n  \r\n  \r\n          </div>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n      </div>\r\n    </div>\r\n  </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}