{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, EventEmitter, TemplateRef, Component, ChangeDetectionStrategy, ContentChild, ViewChild, Input, Output, HostBinding, ContentChildren, NgModule } from '@angular/core';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { Subject, merge } from 'rxjs';\nimport * as i2 from 'mdb-angular-ui-kit/collapse';\nimport { MdbCollapseDirective, MdbCollapseModule } from 'mdb-angular-ui-kit/collapse';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nfunction MdbAccordionItemComponent_3_ng_template_0_Template(rf, ctx) {}\nfunction MdbAccordionItemComponent_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MdbAccordionItemComponent_3_ng_template_0_Template, 0, 0, \"ng-template\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0._headerTemplate);\n  }\n}\nfunction MdbAccordionItemComponent_6_ng_template_0_Template(rf, ctx) {}\nfunction MdbAccordionItemComponent_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MdbAccordionItemComponent_6_ng_template_0_Template, 0, 0, \"ng-template\", 5);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1._bodyTemplate);\n  }\n}\nconst _c0 = [\"*\"];\nconst MDB_ACCORDION_ITEM_BODY = new InjectionToken('MdbAccordionItemBodyDirective');\nlet MdbAccordionItemBodyDirective = /*#__PURE__*/(() => {\n  class MdbAccordionItemBodyDirective {\n    template;\n    constructor(template) {\n      this.template = template;\n    }\n    static ɵfac = function MdbAccordionItemBodyDirective_Factory(t) {\n      return new (t || MdbAccordionItemBodyDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MdbAccordionItemBodyDirective,\n      selectors: [[\"\", \"mdbAccordionItemBody\", \"\"]],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MDB_ACCORDION_ITEM_BODY,\n        useExisting: MdbAccordionItemBodyDirective\n      }])]\n    });\n  }\n  return MdbAccordionItemBodyDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst MDB_ACCORDION_ITEM_HEADER = new InjectionToken('MdbAccordionItemHeaderDirective');\nlet MdbAccordionItemHeaderDirective = /*#__PURE__*/(() => {\n  class MdbAccordionItemHeaderDirective {\n    template;\n    constructor(template) {\n      this.template = template;\n    }\n    static ɵfac = function MdbAccordionItemHeaderDirective_Factory(t) {\n      return new (t || MdbAccordionItemHeaderDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MdbAccordionItemHeaderDirective,\n      selectors: [[\"\", \"mdbAccordionItemHeader\", \"\"]],\n      features: [i0.ɵɵProvidersFeature([{\n        provide: MDB_ACCORDION_ITEM_HEADER,\n        useExisting: MdbAccordionItemHeaderDirective\n      }])]\n    });\n  }\n  return MdbAccordionItemHeaderDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet uniqueHeaderId = 0;\nlet uniqueId = 0;\nlet MdbAccordionItemComponent = /*#__PURE__*/(() => {\n  class MdbAccordionItemComponent {\n    _cdRef;\n    _headerTemplate;\n    _bodyTemplate;\n    collapse;\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    _disabled = false;\n    header;\n    set collapsed(value) {\n      if (!this._isInitialized) {\n        if (!value) {\n          this._shouldOpenOnInit = true;\n        }\n        return;\n      }\n      if (value) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n    id = `mdb-accordion-item-${uniqueId++}`;\n    _headerId = `mdb-accordion-item-header-${uniqueHeaderId++}`;\n    _isInitialized = false;\n    _shouldOpenOnInit = false;\n    itemShow = new EventEmitter();\n    itemShown = new EventEmitter();\n    itemHide = new EventEmitter();\n    itemHidden = new EventEmitter();\n    accordionItem = true;\n    accordionItemDisplayBlock = true;\n    ngOnInit() {\n      this._isInitialized = true;\n      if (this._shouldOpenOnInit) {\n        this.show();\n      }\n    }\n    show$ = new Subject();\n    _collapsed = true;\n    _addCollapsedClass = true;\n    constructor(_cdRef) {\n      this._cdRef = _cdRef;\n    }\n    toggle() {\n      if (this.disabled) {\n        return;\n      }\n      this.collapse.toggle();\n    }\n    show() {\n      this.collapse.show();\n      this._cdRef.markForCheck();\n    }\n    hide() {\n      this.collapse.hide();\n      this._cdRef.markForCheck();\n    }\n    onShow() {\n      this._addCollapsedClass = false;\n      this.itemShow.emit(this);\n      this.show$.next(this);\n    }\n    onHide() {\n      this._addCollapsedClass = true;\n      this.itemHide.emit(this);\n    }\n    onShown() {\n      this._collapsed = false;\n      this.itemShown.emit(this);\n    }\n    onHidden() {\n      this._collapsed = true;\n      this.itemHidden.emit(this);\n    }\n    static ngAcceptInputType_disabled;\n    static ɵfac = function MdbAccordionItemComponent_Factory(t) {\n      return new (t || MdbAccordionItemComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MdbAccordionItemComponent,\n      selectors: [[\"mdb-accordion-item\"]],\n      contentQueries: function MdbAccordionItemComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MDB_ACCORDION_ITEM_HEADER, 7, TemplateRef);\n          i0.ɵɵcontentQuery(dirIndex, MDB_ACCORDION_ITEM_BODY, 7, TemplateRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._headerTemplate = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._bodyTemplate = _t.first);\n        }\n      },\n      viewQuery: function MdbAccordionItemComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(MdbCollapseDirective, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.collapse = _t.first);\n        }\n      },\n      hostVars: 4,\n      hostBindings: function MdbAccordionItemComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"accordion-item\", ctx.accordionItem)(\"d-block\", ctx.accordionItemDisplayBlock);\n        }\n      },\n      inputs: {\n        disabled: \"disabled\",\n        header: \"header\",\n        collapsed: \"collapsed\",\n        id: \"id\"\n      },\n      outputs: {\n        itemShow: \"itemShow\",\n        itemShown: \"itemShown\",\n        itemHide: \"itemHide\",\n        itemHidden: \"itemHidden\"\n      },\n      decls: 7,\n      vars: 11,\n      consts: [[1, \"accordion-header\", 3, \"id\"], [\"type\", \"button\", 1, \"accordion-button\", 3, \"click\"], [4, \"ngIf\"], [\"mdbCollapse\", \"\", 3, \"collapseShow\", \"collapseHide\", \"collapseShown\", \"collapseHidden\"], [1, \"accordion-body\"], [3, \"ngTemplateOutlet\"]],\n      template: function MdbAccordionItemComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\", 0)(1, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function MdbAccordionItemComponent_Template_button_click_1_listener() {\n            return ctx.toggle();\n          });\n          i0.ɵɵtext(2);\n          i0.ɵɵtemplate(3, MdbAccordionItemComponent_3_Template, 1, 1, null, 2);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 3);\n          i0.ɵɵlistener(\"collapseShow\", function MdbAccordionItemComponent_Template_div_collapseShow_4_listener() {\n            return ctx.onShow();\n          })(\"collapseHide\", function MdbAccordionItemComponent_Template_div_collapseHide_4_listener() {\n            return ctx.onHide();\n          })(\"collapseShown\", function MdbAccordionItemComponent_Template_div_collapseShown_4_listener() {\n            return ctx.onShown();\n          })(\"collapseHidden\", function MdbAccordionItemComponent_Template_div_collapseHidden_4_listener() {\n            return ctx.onHidden();\n          });\n          i0.ɵɵelementStart(5, \"div\", 4);\n          i0.ɵɵtemplate(6, MdbAccordionItemComponent_6_Template, 1, 1, null, 2);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"id\", ctx._headerId);\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"collapsed\", ctx._addCollapsedClass);\n          i0.ɵɵattribute(\"aria-expanded\", !ctx._collapsed)(\"aria-controls\", ctx.id)(\"disabled\", ctx.disabled ? \"\" : null);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.header, \" \");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx._headerTemplate);\n          i0.ɵɵadvance();\n          i0.ɵɵattribute(\"id\", ctx.id)(\"aria-labelledby\", ctx._headerId);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx._bodyTemplate);\n        }\n      },\n      dependencies: [i1.NgIf, i1.NgTemplateOutlet, i2.MdbCollapseDirective],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MdbAccordionItemComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MdbAccordionComponent = /*#__PURE__*/(() => {\n  class MdbAccordionComponent {\n    items;\n    get borderless() {\n      return this._borderless;\n    }\n    set borderless(value) {\n      this._borderless = coerceBooleanProperty(value);\n    }\n    _borderless = false;\n    get flush() {\n      return this._flush;\n    }\n    set flush(value) {\n      this._flush = coerceBooleanProperty(value);\n    }\n    _flush = false;\n    get multiple() {\n      return this._multiple;\n    }\n    set multiple(value) {\n      this._multiple = coerceBooleanProperty(value);\n    }\n    _multiple = false;\n    accordion = true;\n    get addBorderlessClass() {\n      return this.borderless;\n    }\n    get addFlushClass() {\n      return this.flush;\n    }\n    constructor() {}\n    ngAfterContentInit() {\n      this.items.changes.pipe(startWith(this.items), switchMap(items => {\n        return merge(...items.map(item => item.show$));\n      })).subscribe(clickedItem => this._handleMultipleItems(clickedItem));\n    }\n    _handleMultipleItems(clickedItem) {\n      if (!this.multiple) {\n        const itemsToClose = this.items.filter(item => item !== clickedItem && !item._collapsed);\n        itemsToClose.forEach(item => item.hide());\n      }\n    }\n    static ngAcceptInputType_borderless;\n    static ngAcceptInputType_flush;\n    static ngAcceptInputType_multiple;\n    static ɵfac = function MdbAccordionComponent_Factory(t) {\n      return new (t || MdbAccordionComponent)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MdbAccordionComponent,\n      selectors: [[\"mdb-accordion\"]],\n      contentQueries: function MdbAccordionComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, MdbAccordionItemComponent, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n        }\n      },\n      hostVars: 6,\n      hostBindings: function MdbAccordionComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"accordion\", ctx.accordion)(\"accordion-borderless\", ctx.addBorderlessClass)(\"accordion-flush\", ctx.addFlushClass);\n        }\n      },\n      inputs: {\n        borderless: \"borderless\",\n        flush: \"flush\",\n        multiple: \"multiple\"\n      },\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function MdbAccordionComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return MdbAccordionComponent;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MdbAccordionModule = /*#__PURE__*/(() => {\n  class MdbAccordionModule {\n    static ɵfac = function MdbAccordionModule_Factory(t) {\n      return new (t || MdbAccordionModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MdbAccordionModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, MdbCollapseModule]\n    });\n  }\n  return MdbAccordionModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MdbAccordionComponent, MdbAccordionItemBodyDirective, MdbAccordionItemComponent, MdbAccordionItemHeaderDirective, MdbAccordionModule };\n//# sourceMappingURL=mdb-angular-ui-kit-accordion.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}