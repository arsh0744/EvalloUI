{"ast":null,"code":"import _asyncToGenerator from \"F:/Evallo Project/mdb-proj/mdb5-free-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\n// MDB Modules\nimport { MdbAccordionModule } from 'mdb-angular-ui-kit/accordion';\nimport { MdbCarouselModule } from 'mdb-angular-ui-kit/carousel';\nimport { MdbCheckboxModule } from 'mdb-angular-ui-kit/checkbox';\nimport { MdbCollapseModule } from 'mdb-angular-ui-kit/collapse';\nimport { MdbDropdownModule } from 'mdb-angular-ui-kit/dropdown';\nimport { MdbFormsModule } from 'mdb-angular-ui-kit/forms';\nimport { MdbModalModule } from 'mdb-angular-ui-kit/modal';\nimport { MdbPopoverModule } from 'mdb-angular-ui-kit/popover';\nimport { MdbRadioModule } from 'mdb-angular-ui-kit/radio';\nimport { MdbRangeModule } from 'mdb-angular-ui-kit/range';\nimport { MdbRippleModule } from 'mdb-angular-ui-kit/ripple';\nimport { MdbScrollspyModule } from 'mdb-angular-ui-kit/scrollspy';\nimport { MdbTabsModule } from 'mdb-angular-ui-kit/tabs';\nimport { MdbTooltipModule } from 'mdb-angular-ui-kit/tooltip';\nimport { MdbValidationModule } from 'mdb-angular-ui-kit/validation';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/server/server-api.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../services/userMgmt/user.service\";\nimport * as i5 from \"mdb-angular-ui-kit/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"mdb-angular-ui-kit/ripple\";\nimport * as i8 from \"mdb-angular-ui-kit/tabs\";\nimport * as i9 from \"mdb-angular-ui-kit/validation\";\nfunction MainPageComponent_button_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 28);\n    i0.ɵɵtext(1, \" Sign in \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.loginForm.valid);\n  }\n}\nfunction MainPageComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\", 30)(2, \"span\", 31);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction MainPageComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r2.registerError ? \"text-danger\" : \"text-success\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r2.regsisterationReponse);\n  }\n}\nfunction MainPageComponent_button_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 33);\n    i0.ɵɵtext(1, \" Sign Up \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r3.ccRegisForm.valid);\n  }\n}\nfunction MainPageComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\", 30)(2, \"span\", 31);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction MainPageComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r5.registerError ? \"text-danger\" : \"text-success\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r5.regsisterationReponse);\n  }\n}\nexport class MainPageComponent {\n  constructor(fb, server, router, Users) {\n    this.fb = fb;\n    this.server = server;\n    this.router = router;\n    this.Users = Users;\n    this.title = 'Welcome to Evallo';\n    this.showLoading = false;\n    this.showErrorMessage = false;\n    this.regsisterationReponse = null;\n    this.registerError = false;\n  }\n  ngOnInit() {\n    this.buildCCRegisForm();\n    this.buildLoginForm();\n  }\n  buildCCRegisForm() {\n    this.ccRegisForm = this.fb.group({\n      registerName: ['', [Validators.required]],\n      registerUsername: ['', [Validators.required]],\n      registerEmail: ['', [Validators.required, Validators.email]],\n      registerPassword: ['', [Validators.required]]\n    });\n  }\n  buildLoginForm() {\n    this.loginForm = this.fb.group({\n      loginCred: ['', [Validators.required]],\n      loginPass: ['', [Validators.required]]\n    });\n  }\n  addNewCCForEvallo() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.showLoading = true;\n      let newUser = {\n        Name: _this.ccRegisForm.controls.registerName.value,\n        username: _this.ccRegisForm.controls.registerUsername.value,\n        userEmail: _this.ccRegisForm.controls.registerEmail.value,\n        userPassword: _this.ccRegisForm.controls.registerPassword.value\n      };\n      try {\n        yield _this.server.addNewEvalloCCFunc(newUser).then(fulfilled => {\n          _this.showErrorMessage = true;\n          _this.regsisterationReponse = fulfilled.Message;\n          _this.showLoading = false;\n          _this.registerError = false;\n          _this.Users.changeActiveUserId(fulfilled.Mes);\n          setTimeout(() => {\n            _this.showErrorMessage = false;\n            _this.router.navigateByUrl('/content-list');\n          }, 3000);\n        }, rejected => {\n          console.log(rejected, \"rejected\");\n          _this.showErrorMessage = true;\n          _this.regsisterationReponse = rejected.Message;\n          _this.showLoading = false;\n          _this.registerError = true;\n          setTimeout(() => {\n            _this.showErrorMessage = false;\n          }, 3000);\n        });\n      } catch (err) {\n        _this.showLoading = false;\n        console.error(err);\n      }\n    })();\n  }\n  callLoginApi() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.showLoading = true;\n      let userCreds = {\n        identifier: _this2.loginForm.controls.loginCred.value,\n        password: _this2.loginForm.controls.loginPass.value\n      };\n      try {\n        yield _this2.server.callLoginApi(userCreds).then(fulfilled => {\n          _this2.regsisterationReponse = fulfilled.Message;\n          _this2.showLoading = false;\n          _this2.registerError = false;\n          _this2.router.navigateByUrl('/content-list');\n          _this2.Users.changeActiveUserId(fulfilled.Message.message._id);\n        }, rejected => {\n          console.log(rejected, \"rejected\");\n          _this2.showErrorMessage = true;\n          _this2.regsisterationReponse = rejected.Message;\n          _this2.showLoading = false;\n          _this2.registerError = true;\n          setTimeout(() => {\n            _this2.showErrorMessage = false;\n          }, 3000);\n        });\n      } catch (err) {\n        _this2.showLoading = false;\n        console.error(err);\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function MainPageComponent_Factory(t) {\n    return new (t || MainPageComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ServerApiService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.UserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MainPageComponent,\n    selectors: [[\"app-main-page\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 44,\n    vars: 10,\n    consts: [[1, \"container\", \"pt-5\"], [1, \"d-flex\", \"justify-content-center\", \"align-items-center\", \"pt-5\"], [1, \"\"], [1, \"text-center\"], [\"src\", \"assets/logo.png\", 1, \"mb-4\", 2, \"width\", \"180px\"], [1, \"mb-3\", 2, \"text-align\", \"center\"], [1, \"pillSwitcher\"], [3, \"pills\", \"fill\"], [\"title\", \"Login\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-4\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"email\", \"formControlName\", \"loginCred\", 1, \"form-control\"], [\"mdbValidate\", \"\", \"mdbLabel\", \"\", \"for\", \"loginName\", 1, \"form-label\"], [\"mdbInput\", \"\", \"type\", \"password\", \"formControlName\", \"loginPass\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"loginPassword\", 1, \"form-label\"], [\"mdbRipple\", \"\", \"type\", \"submit\", \"class\", \"btn btn-primary btn-block mb-4\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"row\", \"style\", \"display: flex; \\n                  justify-content: center;\", 4, \"ngIf\"], [\"class\", \"row\", \"style\", \"display: flex; \\n                  justify-content: center;text-align: center;\", 4, \"ngIf\"], [\"title\", \"Content Creator Registration\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"text\", \"formControlName\", \"registerName\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerName\", 1, \"form-label\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"text\", \"formControlName\", \"registerUsername\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerUsername\", 1, \"form-label\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"email\", \"formControlName\", \"registerEmail\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerEmail\", 1, \"form-label\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"password\", \"formControlName\", \"registerPassword\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerPassword\", 1, \"form-label\"], [\"mdbRipple\", \"\", \"type\", \"submit\", \"class\", \"btn btn-primary btn-block mb-3\", 3, \"disabled\", 4, \"ngIf\"], [\"mdbRipple\", \"\", \"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mb-4\", 3, \"disabled\"], [1, \"row\", 2, \"display\", \"flex\", \"justify-content\", \"center\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\", 2, \"display\", \"flex\", \"justify-content\", \"center\"], [1, \"visually-hidden\"], [1, \"row\", 2, \"display\", \"flex\", \"justify-content\", \"center\", \"text-align\", \"center\"], [\"mdbRipple\", \"\", \"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mb-3\", 3, \"disabled\"]],\n    template: function MainPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵelement(4, \"img\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"h5\", 5);\n        i0.ɵɵtext(6, \"Welcome to Evallo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"hr\");\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"mdb-tabs\", 7)(10, \"mdb-tab\", 8)(11, \"form\", 9);\n        i0.ɵɵlistener(\"ngSubmit\", function MainPageComponent_Template_form_ngSubmit_11_listener() {\n          return ctx.callLoginApi();\n        });\n        i0.ɵɵelementStart(12, \"mdb-form-control\", 10);\n        i0.ɵɵelement(13, \"input\", 11);\n        i0.ɵɵelementStart(14, \"label\", 12);\n        i0.ɵɵtext(15, \"Email or username\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"mdb-form-control\", 10);\n        i0.ɵɵelement(17, \"input\", 13);\n        i0.ɵɵelementStart(18, \"label\", 14);\n        i0.ɵɵtext(19, \"Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(20, MainPageComponent_button_20_Template, 2, 1, \"button\", 15)(21, MainPageComponent_div_21_Template, 4, 0, \"div\", 16)(22, MainPageComponent_div_22_Template, 3, 4, \"div\", 17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"mdb-tab\", 18)(24, \"form\", 9);\n        i0.ɵɵlistener(\"ngSubmit\", function MainPageComponent_Template_form_ngSubmit_24_listener() {\n          return ctx.addNewCCForEvallo();\n        });\n        i0.ɵɵelementStart(25, \"mdb-form-control\", 10);\n        i0.ɵɵelement(26, \"input\", 19);\n        i0.ɵɵelementStart(27, \"label\", 20);\n        i0.ɵɵtext(28, \"Name\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"mdb-form-control\", 10);\n        i0.ɵɵelement(30, \"input\", 21);\n        i0.ɵɵelementStart(31, \"label\", 22);\n        i0.ɵɵtext(32, \"Username\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"mdb-form-control\", 10);\n        i0.ɵɵelement(34, \"input\", 23);\n        i0.ɵɵelementStart(35, \"label\", 24);\n        i0.ɵɵtext(36, \"Email\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"mdb-form-control\", 10);\n        i0.ɵɵelement(38, \"input\", 25);\n        i0.ɵɵelementStart(39, \"label\", 26);\n        i0.ɵɵtext(40, \"Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(41, MainPageComponent_button_41_Template, 2, 1, \"button\", 27)(42, MainPageComponent_div_42_Template, 4, 0, \"div\", 16)(43, MainPageComponent_div_43_Template, 3, 4, \"div\", 17);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"pills\", true)(\"fill\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.showLoading == false);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.showLoading == true);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.showErrorMessage == true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.ccRegisForm);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngIf\", ctx.showLoading == false);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.showLoading == true);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.showErrorMessage == true);\n      }\n    },\n    dependencies: [MdbFormsModule, i5.MdbFormControlComponent, i5.MdbInputDirective, i5.MdbLabelDirective, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, CommonModule, i6.NgIf, MdbAccordionModule, MdbCarouselModule, MdbCheckboxModule, MdbCollapseModule, MdbDropdownModule, MdbModalModule, MdbPopoverModule, MdbRadioModule, MdbRangeModule, MdbRippleModule, i7.MdbRippleDirective, MdbScrollspyModule, MdbTabsModule, i8.MdbTabComponent, i8.MdbTabsComponent, MdbTooltipModule, MdbValidationModule, i9.MdbValidateDirective],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["ReactiveFormsModule","Validators","MdbAccordionModule","MdbCarouselModule","MdbCheckboxModule","MdbCollapseModule","MdbDropdownModule","MdbFormsModule","MdbModalModule","MdbPopoverModule","MdbRadioModule","MdbRangeModule","MdbRippleModule","MdbScrollspyModule","MdbTabsModule","MdbTooltipModule","MdbValidationModule","CommonModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","loginForm","valid","ɵɵadvance","ɵɵclassMap","ctx_r2","registerError","ɵɵtextInterpolate","regsisterationReponse","ctx_r3","ccRegisForm","ctx_r5","MainPageComponent","constructor","fb","server","router","Users","title","showLoading","showErrorMessage","ngOnInit","buildCCRegisForm","buildLoginForm","group","registerName","required","registerUsername","registerEmail","email","registerPassword","loginCred","loginPass","addNewCCForEvallo","_this","_asyncToGenerator","newUser","Name","controls","value","username","userEmail","userPassword","addNewEvalloCCFunc","then","fulfilled","Message","changeActiveUserId","Mes","setTimeout","navigateByUrl","rejected","console","log","err","error","callLoginApi","_this2","userCreds","identifier","password","message","_id","_","ɵɵdirectiveInject","i1","FormBuilder","i2","ServerApiService","i3","Router","i4","UserService","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","MainPageComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","MainPageComponent_Template_form_ngSubmit_11_listener","ɵɵtemplate","MainPageComponent_button_20_Template","MainPageComponent_div_21_Template","MainPageComponent_div_22_Template","MainPageComponent_Template_form_ngSubmit_24_listener","MainPageComponent_button_41_Template","MainPageComponent_div_42_Template","MainPageComponent_div_43_Template","i5","MdbFormControlComponent","MdbInputDirective","MdbLabelDirective","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i6","NgIf","i7","MdbRippleDirective","i8","MdbTabComponent","MdbTabsComponent","i9","MdbValidateDirective","styles"],"sources":["F:\\Evallo Project\\mdb-proj\\mdb5-free-angular\\src\\app\\main-page\\main-page.component.ts","F:\\Evallo Project\\mdb-proj\\mdb5-free-angular\\src\\app\\main-page\\main-page.component.html"],"sourcesContent":["import { CUSTOM_ELEMENTS_SCHEMA, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n// MDB Modules\r\nimport { MdbAccordionModule } from 'mdb-angular-ui-kit/accordion';\r\nimport { MdbCarouselModule } from 'mdb-angular-ui-kit/carousel';\r\nimport { MdbCheckboxModule } from 'mdb-angular-ui-kit/checkbox';\r\nimport { MdbCollapseModule } from 'mdb-angular-ui-kit/collapse';\r\nimport { MdbDropdownModule } from 'mdb-angular-ui-kit/dropdown';\r\nimport { MdbFormsModule } from 'mdb-angular-ui-kit/forms';\r\nimport { MdbModalModule } from 'mdb-angular-ui-kit/modal';\r\nimport { MdbPopoverModule } from 'mdb-angular-ui-kit/popover';\r\nimport { MdbRadioModule } from 'mdb-angular-ui-kit/radio';\r\nimport { MdbRangeModule } from 'mdb-angular-ui-kit/range';\r\nimport { MdbRippleModule } from 'mdb-angular-ui-kit/ripple';\r\nimport { MdbScrollspyModule } from 'mdb-angular-ui-kit/scrollspy';\r\nimport { MdbTabsModule } from 'mdb-angular-ui-kit/tabs';\r\nimport { MdbTooltipModule } from 'mdb-angular-ui-kit/tooltip';\r\nimport { MdbValidationModule } from 'mdb-angular-ui-kit/validation';\r\nimport { ServerApiService } from '../services/server/server-api.service';\r\nimport { UserRegistrationModel } from '../services/interfaces/interface.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserService } from '../services/userMgmt/user.service';\r\n\r\n@Component({\r\n  selector: 'app-main-page',\r\n  standalone: true,\r\n  imports: [\r\n    MdbFormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    MdbAccordionModule,\r\n    MdbCarouselModule,\r\n    MdbCheckboxModule,\r\n    MdbCollapseModule,\r\n    MdbDropdownModule,\r\n    MdbFormsModule,\r\n    MdbModalModule,\r\n    MdbPopoverModule,\r\n    MdbRadioModule,\r\n    MdbRangeModule,\r\n    MdbRippleModule,\r\n    MdbScrollspyModule,\r\n    MdbTabsModule,\r\n    MdbTooltipModule,\r\n    MdbValidationModule,\r\n  ],\r\n  templateUrl: './main-page.component.html',\r\n  styleUrl: './main-page.component.scss',\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class MainPageComponent implements OnInit {\r\n\r\n  title = 'Welcome to Evallo';\r\n  ccRegisForm : FormGroup ;\r\n  showLoading : boolean = false ;\r\n  showErrorMessage : boolean = false;\r\n  regsisterationReponse : string = null;\r\n  registerError : boolean = false ;\r\n\r\n  loginForm : FormGroup;\r\n\r\n  constructor\r\n  (\r\n    private fb: FormBuilder,\r\n    private server:ServerApiService,\r\n    private router : Router,\r\n    private Users : UserService\r\n  )\r\n  {\r\n\r\n  }\r\n  ngOnInit()\r\n   {\r\n    this.buildCCRegisForm();\r\n    this.buildLoginForm();\r\n    }\r\n    private buildCCRegisForm()\r\n    {\r\n      this.ccRegisForm = this.fb.group({\r\n        registerName : ['', [Validators.required]],\r\n        registerUsername : ['', [Validators.required]],\r\n        registerEmail: ['', [Validators.required, Validators.email]],\r\n        registerPassword: ['', [Validators.required]],\r\n      });\r\n    }\r\n    private buildLoginForm()\r\n    {\r\n      this.loginForm = this.fb.group({\r\n        loginCred : ['', [Validators.required]],\r\n        loginPass : ['', [Validators.required]],\r\n      });\r\n    }\r\n\r\n\r\n\r\n  async addNewCCForEvallo()\r\n  {\r\n    this.showLoading = true ;\r\n    let newUser : UserRegistrationModel = \r\n    {\r\n      Name : this.ccRegisForm.controls.registerName.value,\r\n      username: this.ccRegisForm.controls.registerUsername.value,\r\n      userEmail: this.ccRegisForm.controls.registerEmail.value,\r\n      userPassword: this.ccRegisForm.controls.registerPassword.value\r\n    }\r\n    ;\r\n\r\n    try\r\n    {\r\n      await this.server.addNewEvalloCCFunc(newUser).then\r\n      (\r\n        (fulfilled:any) =>\r\n        {\r\n          this.showErrorMessage = true;\r\n          this.regsisterationReponse = fulfilled.Message ;\r\n          this.showLoading = false;\r\n          this.registerError = false;\r\n          this.Users.changeActiveUserId(fulfilled.Mes)\r\n            \r\n          setTimeout(() => {\r\n            this.showErrorMessage = false ;\r\n            this.router.navigateByUrl('/content-list')\r\n          }, 3000);\r\n\r\n        },\r\n        (rejected) =>\r\n        {\r\n          console.log(rejected,\"rejected\");\r\n          this.showErrorMessage = true;\r\n          this.regsisterationReponse = rejected.Message ;\r\n          this.showLoading = false;\r\n          this.registerError = true;\r\n          setTimeout(() => {\r\n            this.showErrorMessage = false ;\r\n          }, 3000);\r\n\r\n        }\r\n      )\r\n     \r\n    \r\n    }\r\n    catch(err)\r\n    {\r\n      this.showLoading = false;\r\n      console.error(err) ;\r\n    }\r\n  \r\n    \r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  async callLoginApi()\r\n  {\r\n    this.showLoading = true ;\r\n    let userCreds = \r\n    {\r\n      identifier : this.loginForm.controls.loginCred.value,\r\n      password: this.loginForm.controls.loginPass.value\r\n    }\r\n    ;\r\n\r\n    try\r\n    {\r\n      await this.server.callLoginApi(userCreds).then\r\n      (\r\n        (fulfilled:any) =>\r\n        {\r\n          this.regsisterationReponse = fulfilled.Message ;\r\n          this.showLoading = false;\r\n          this.registerError = false;\r\n          this.router.navigateByUrl('/content-list');\r\n          this.Users.changeActiveUserId(fulfilled.Message.message._id) ;\r\n\r\n        },\r\n        (rejected) =>\r\n        {\r\n          console.log(rejected,\"rejected\");\r\n          this.showErrorMessage = true;\r\n          this.regsisterationReponse = rejected.Message ;\r\n          this.showLoading = false;\r\n          this.registerError = true;\r\n          setTimeout(() => {\r\n            this.showErrorMessage = false ;\r\n          }, 3000);\r\n\r\n        }\r\n      )\r\n     \r\n      \r\n      \r\n    }\r\n    catch(err)\r\n    {\r\n      this.showLoading = false;\r\n      console.error(err) ;\r\n    }\r\n    \r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container pt-5\">\r\n    <div class=\"d-flex justify-content-center align-items-center pt-5\">\r\n      <div class=\"\">\r\n        <div class=\"text-center\">\r\n          <img\r\n            class=\"mb-4\"\r\n            src=\"assets/logo.png\"\r\n            style=\"width: 180px\"\r\n          />\r\n        </div>\r\n        <h5 class=\"mb-3\" style=\"text-align: center;\">Welcome to Evallo</h5>\r\n  \r\n    \r\n     \r\n        <hr />\r\n   \r\n  \r\n          <div class=\"pillSwitcher\">\r\n  \r\n            <mdb-tabs [pills]=\"true\" [fill]=\"true\">\r\n              <mdb-tab title=\"Login\">\r\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"callLoginApi()\">\r\n                                  \r\n                  <mdb-form-control class=\"mb-4\">\r\n                    <input mdbValidate mdbInput type=\"email\"  class=\"form-control\" formControlName=\"loginCred\" />\r\n                    <label mdbValidate mdbLabel class=\"form-label\" for=\"loginName\">Email or username</label>\r\n                  </mdb-form-control>\r\n            \r\n                  <mdb-form-control class=\"mb-4\">\r\n                    <input mdbInput type=\"password\"  class=\"form-control\" formControlName=\"loginPass\"/>\r\n                    <label mdbLabel class=\"form-label\" for=\"loginPassword\">Password</label>\r\n                  </mdb-form-control>\r\n            \r\n                          \r\n                  <button mdbRipple [disabled]=\"!loginForm.valid\" *ngIf=\"showLoading==false\"\r\n                   type=\"submit\" class=\"btn btn-primary btn-block mb-4\">\r\n                    Sign in\r\n                  </button>\r\n                  <div class=\"row\" style=\"display: flex; \r\n                  justify-content: center;\" *ngIf=\"showLoading==true\">\r\n                    <div class=\"spinner-border text-primary\" role=\"status\" style=\"display: flex;justify-content: center;\">\r\n                      <span class=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\" style=\"display: flex; \r\n                  justify-content: center;text-align: center;\" *ngIf=\"showErrorMessage==true\" >\r\n                    \r\n                      <span class=\"{{registerError?'text-danger':'text-success'}}\">{{regsisterationReponse}}</span>\r\n                    \r\n                  </div>\r\n            \r\n                  \r\n                </form></mdb-tab\r\n              >\r\n              <mdb-tab title=\"Content Creator Registration\">\r\n                <form [formGroup]=\"ccRegisForm\" (ngSubmit)=\"addNewCCForEvallo()\">\r\n                            \r\n                  <mdb-form-control class=\"mb-4\">\r\n                    <input mdbValidate mdbInput type=\"text\"  class=\"form-control\" formControlName=\"registerName\" />\r\n                    <label mdbLabel class=\"form-label\" for=\"registerName\">Name</label>\r\n                  </mdb-form-control>\r\n            \r\n                  <mdb-form-control class=\"mb-4\">\r\n                    <input mdbValidate mdbInput type=\"text\"  class=\"form-control\" formControlName=\"registerUsername\" />\r\n                    <label mdbLabel class=\"form-label\" for=\"registerUsername\">Username</label>\r\n                  </mdb-form-control>\r\n            \r\n                  <mdb-form-control class=\"mb-4\">\r\n                    <input mdbValidate mdbInput type=\"email\"  class=\"form-control\" formControlName=\"registerEmail\" />\r\n                    <label mdbLabel class=\"form-label\" for=\"registerEmail\">Email</label>\r\n                  </mdb-form-control>\r\n            \r\n                  <mdb-form-control class=\"mb-4\" >\r\n                    <input mdbValidate mdbInput type=\"password\"  class=\"form-control\" formControlName=\"registerPassword\" />\r\n                    <label mdbLabel class=\"form-label\" for=\"registerPassword\">Password</label>\r\n                  </mdb-form-control>\r\n            \r\n               \r\n            \r\n                  <button mdbRipple type=\"submit\" [disabled]=\"!ccRegisForm.valid\" *ngIf=\"showLoading==false\"\r\n                    class=\"btn btn-primary btn-block mb-3\">\r\n                    Sign Up\r\n                  </button>\r\n                  <div class=\"row\" style=\"display: flex; \r\n                  justify-content: center;\" *ngIf=\"showLoading==true\">\r\n                    <div class=\"spinner-border text-primary\" role=\"status\" style=\"display: flex;justify-content: center;\">\r\n                      <span class=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\" style=\"display: flex; \r\n                  justify-content: center;text-align: center;\" *ngIf=\"showErrorMessage==true\" >\r\n                    \r\n                      <span class=\"{{registerError?'text-danger':'text-success'}}\">{{regsisterationReponse}}</span>\r\n                    \r\n                  </div>\r\n  \r\n                  \r\n                </form></mdb-tab\r\n              >\r\n            </mdb-tabs>\r\n  \r\n  \r\n          </div>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n      </div>\r\n    </div>\r\n  </div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}