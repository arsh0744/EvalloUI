{"ast":null,"code":"import _asyncToGenerator from \"F:/Evallo Project/mdb-proj/mdb5-free-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { CUSTOM_ELEMENTS_SCHEMA, Component } from '@angular/core';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\n// MDB Modules\nimport { MdbAccordionModule } from 'mdb-angular-ui-kit/accordion';\nimport { MdbCarouselModule } from 'mdb-angular-ui-kit/carousel';\nimport { MdbCheckboxModule } from 'mdb-angular-ui-kit/checkbox';\nimport { MdbCollapseModule } from 'mdb-angular-ui-kit/collapse';\nimport { MdbDropdownModule } from 'mdb-angular-ui-kit/dropdown';\nimport { MdbFormsModule } from 'mdb-angular-ui-kit/forms';\nimport { MdbModalModule } from 'mdb-angular-ui-kit/modal';\nimport { MdbPopoverModule } from 'mdb-angular-ui-kit/popover';\nimport { MdbRadioModule } from 'mdb-angular-ui-kit/radio';\nimport { MdbRangeModule } from 'mdb-angular-ui-kit/range';\nimport { MdbRippleModule } from 'mdb-angular-ui-kit/ripple';\nimport { MdbScrollspyModule } from 'mdb-angular-ui-kit/scrollspy';\nimport { MdbTabsModule } from 'mdb-angular-ui-kit/tabs';\nimport { MdbTooltipModule } from 'mdb-angular-ui-kit/tooltip';\nimport { MdbValidationModule } from 'mdb-angular-ui-kit/validation';\nimport { CommonModule } from '@angular/common';\nlet MainPageComponent = class MainPageComponent {\n  constructor(fb, server, router, Users) {\n    this.fb = fb;\n    this.server = server;\n    this.router = router;\n    this.Users = Users;\n    this.title = 'Welcome to Evallo';\n    this.showLoading = false;\n    this.showErrorMessage = false;\n    this.regsisterationReponse = null;\n    this.registerError = false;\n  }\n  ngOnInit() {\n    this.buildCCRegisForm();\n    this.buildLoginForm();\n  }\n  buildCCRegisForm() {\n    this.ccRegisForm = this.fb.group({\n      registerName: ['', [Validators.required]],\n      registerUsername: ['', [Validators.required]],\n      registerEmail: ['', [Validators.required, Validators.email]],\n      registerPassword: ['', [Validators.required]]\n    });\n  }\n  buildLoginForm() {\n    this.loginForm = this.fb.group({\n      loginCred: ['', [Validators.required]],\n      loginPass: ['', [Validators.required]]\n    });\n  }\n  addNewCCForEvallo() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.showLoading = true;\n      let newUser = {\n        Name: _this.ccRegisForm.controls.registerName.value,\n        username: _this.ccRegisForm.controls.registerUsername.value,\n        userEmail: _this.ccRegisForm.controls.registerEmail.value,\n        userPassword: _this.ccRegisForm.controls.registerPassword.value\n      };\n      try {\n        yield _this.server.addNewEvalloCCFunc(newUser).then(fulfilled => {\n          _this.showErrorMessage = true;\n          _this.regsisterationReponse = fulfilled.Message;\n          _this.showLoading = false;\n          _this.registerError = false;\n        }, rejected => {\n          console.log(rejected, \"rejected\");\n          _this.showErrorMessage = true;\n          _this.regsisterationReponse = rejected.Message;\n          _this.showLoading = false;\n          _this.registerError = true;\n        });\n        setTimeout(() => {\n          _this.showErrorMessage = false;\n          _this.router.navigateByUrl('/cc-dashboard');\n        }, 3000);\n      } catch (err) {\n        _this.showLoading = false;\n        console.error(err);\n      }\n    })();\n  }\n  callLoginApi() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.showLoading = true;\n      let userCreds = {\n        identifier: _this2.loginForm.controls.loginCred.value,\n        password: _this2.loginForm.controls.loginPass.value\n      };\n      try {\n        yield _this2.server.callLoginApi(userCreds).then(fulfilled => {\n          _this2.regsisterationReponse = fulfilled.Message;\n          _this2.showLoading = false;\n          _this2.registerError = false;\n          _this2.router.navigateByUrl('/cc-dashboard');\n        }, rejected => {\n          console.log(rejected, \"rejected\");\n          _this2.showErrorMessage = true;\n          _this2.regsisterationReponse = rejected.Message;\n          _this2.showLoading = false;\n          _this2.registerError = true;\n          setTimeout(() => {\n            _this2.showErrorMessage = false;\n          }, 3000);\n        });\n      } catch (err) {\n        _this2.showLoading = false;\n        console.error(err);\n      }\n    })();\n  }\n};\nMainPageComponent = __decorate([Component({\n  selector: 'app-main-page',\n  standalone: true,\n  imports: [MdbFormsModule, ReactiveFormsModule, CommonModule, MdbAccordionModule, MdbCarouselModule, MdbCheckboxModule, MdbCollapseModule, MdbDropdownModule, MdbFormsModule, MdbModalModule, MdbPopoverModule, MdbRadioModule, MdbRangeModule, MdbRippleModule, MdbScrollspyModule, MdbTabsModule, MdbTooltipModule, MdbValidationModule],\n  templateUrl: './main-page.component.html',\n  styleUrl: './main-page.component.scss',\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})], MainPageComponent);\nexport { MainPageComponent };","map":{"version":3,"names":["CUSTOM_ELEMENTS_SCHEMA","Component","ReactiveFormsModule","Validators","MdbAccordionModule","MdbCarouselModule","MdbCheckboxModule","MdbCollapseModule","MdbDropdownModule","MdbFormsModule","MdbModalModule","MdbPopoverModule","MdbRadioModule","MdbRangeModule","MdbRippleModule","MdbScrollspyModule","MdbTabsModule","MdbTooltipModule","MdbValidationModule","CommonModule","MainPageComponent","constructor","fb","server","router","Users","title","showLoading","showErrorMessage","regsisterationReponse","registerError","ngOnInit","buildCCRegisForm","buildLoginForm","ccRegisForm","group","registerName","required","registerUsername","registerEmail","email","registerPassword","loginForm","loginCred","loginPass","addNewCCForEvallo","_this","_asyncToGenerator","newUser","Name","controls","value","username","userEmail","userPassword","addNewEvalloCCFunc","then","fulfilled","Message","rejected","console","log","setTimeout","navigateByUrl","err","error","callLoginApi","_this2","userCreds","identifier","password","__decorate","selector","standalone","imports","templateUrl","styleUrl","schemas"],"sources":["F:\\Evallo Project\\mdb-proj\\mdb5-free-angular\\src\\app\\main-page\\main-page.component.ts"],"sourcesContent":["import { CUSTOM_ELEMENTS_SCHEMA, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n// MDB Modules\r\nimport { MdbAccordionModule } from 'mdb-angular-ui-kit/accordion';\r\nimport { MdbCarouselModule } from 'mdb-angular-ui-kit/carousel';\r\nimport { MdbCheckboxModule } from 'mdb-angular-ui-kit/checkbox';\r\nimport { MdbCollapseModule } from 'mdb-angular-ui-kit/collapse';\r\nimport { MdbDropdownModule } from 'mdb-angular-ui-kit/dropdown';\r\nimport { MdbFormsModule } from 'mdb-angular-ui-kit/forms';\r\nimport { MdbModalModule } from 'mdb-angular-ui-kit/modal';\r\nimport { MdbPopoverModule } from 'mdb-angular-ui-kit/popover';\r\nimport { MdbRadioModule } from 'mdb-angular-ui-kit/radio';\r\nimport { MdbRangeModule } from 'mdb-angular-ui-kit/range';\r\nimport { MdbRippleModule } from 'mdb-angular-ui-kit/ripple';\r\nimport { MdbScrollspyModule } from 'mdb-angular-ui-kit/scrollspy';\r\nimport { MdbTabsModule } from 'mdb-angular-ui-kit/tabs';\r\nimport { MdbTooltipModule } from 'mdb-angular-ui-kit/tooltip';\r\nimport { MdbValidationModule } from 'mdb-angular-ui-kit/validation';\r\nimport { ServerApiService } from '../services/server/server-api.service';\r\nimport { UserRegistrationModel } from '../services/interfaces/interface.service';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-main-page',\r\n  standalone: true,\r\n  imports: [\r\n    MdbFormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    MdbAccordionModule,\r\n    MdbCarouselModule,\r\n    MdbCheckboxModule,\r\n    MdbCollapseModule,\r\n    MdbDropdownModule,\r\n    MdbFormsModule,\r\n    MdbModalModule,\r\n    MdbPopoverModule,\r\n    MdbRadioModule,\r\n    MdbRangeModule,\r\n    MdbRippleModule,\r\n    MdbScrollspyModule,\r\n    MdbTabsModule,\r\n    MdbTooltipModule,\r\n    MdbValidationModule,\r\n  ],\r\n  templateUrl: './main-page.component.html',\r\n  styleUrl: './main-page.component.scss',\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class MainPageComponent implements OnInit {\r\n\r\n  title = 'Welcome to Evallo';\r\n  ccRegisForm : FormGroup ;\r\n  showLoading : boolean = false ;\r\n  showErrorMessage : boolean = false;\r\n  regsisterationReponse : string = null;\r\n  registerError : boolean = false ;\r\n\r\n  loginForm : FormGroup;\r\n\r\n  constructor\r\n  (\r\n    private fb: FormBuilder,\r\n    private server:ServerApiService,\r\n    private router : Router,\r\n    private Users : User\r\n  )\r\n  {\r\n\r\n  }\r\n  ngOnInit()\r\n   {\r\n    this.buildCCRegisForm();\r\n    this.buildLoginForm();\r\n    }\r\n    private buildCCRegisForm()\r\n    {\r\n      this.ccRegisForm = this.fb.group({\r\n        registerName : ['', [Validators.required]],\r\n        registerUsername : ['', [Validators.required]],\r\n        registerEmail: ['', [Validators.required, Validators.email]],\r\n        registerPassword: ['', [Validators.required]],\r\n      });\r\n    }\r\n    private buildLoginForm()\r\n    {\r\n      this.loginForm = this.fb.group({\r\n        loginCred : ['', [Validators.required]],\r\n        loginPass : ['', [Validators.required]],\r\n      });\r\n    }\r\n\r\n\r\n\r\n  async addNewCCForEvallo()\r\n  {\r\n    this.showLoading = true ;\r\n    let newUser : UserRegistrationModel = \r\n    {\r\n      Name : this.ccRegisForm.controls.registerName.value,\r\n      username: this.ccRegisForm.controls.registerUsername.value,\r\n      userEmail: this.ccRegisForm.controls.registerEmail.value,\r\n      userPassword: this.ccRegisForm.controls.registerPassword.value\r\n    }\r\n    ;\r\n\r\n    try\r\n    {\r\n      await this.server.addNewEvalloCCFunc(newUser).then\r\n      (\r\n        (fulfilled:any) =>\r\n        {\r\n          this.showErrorMessage = true;\r\n          this.regsisterationReponse = fulfilled.Message ;\r\n          this.showLoading = false;\r\n          this.registerError = false;\r\n        },\r\n        (rejected) =>\r\n        {\r\n          console.log(rejected,\"rejected\");\r\n          this.showErrorMessage = true;\r\n          this.regsisterationReponse = rejected.Message ;\r\n          this.showLoading = false;\r\n          this.registerError = true;\r\n\r\n        }\r\n      )\r\n     \r\n      \r\n      setTimeout(() => {\r\n        this.showErrorMessage = false ;\r\n        this.router.navigateByUrl('/cc-dashboard')\r\n      }, 3000);\r\n    }\r\n    catch(err)\r\n    {\r\n      this.showLoading = false;\r\n      console.error(err) ;\r\n    }\r\n  \r\n    \r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  async callLoginApi()\r\n  {\r\n    this.showLoading = true ;\r\n    let userCreds = \r\n    {\r\n      identifier : this.loginForm.controls.loginCred.value,\r\n      password: this.loginForm.controls.loginPass.value\r\n    }\r\n    ;\r\n\r\n    try\r\n    {\r\n      await this.server.callLoginApi(userCreds).then\r\n      (\r\n        (fulfilled:any) =>\r\n        {\r\n          this.regsisterationReponse = fulfilled.Message ;\r\n          this.showLoading = false;\r\n          this.registerError = false;\r\n          this.router.navigateByUrl('/cc-dashboard')\r\n\r\n        },\r\n        (rejected) =>\r\n        {\r\n          console.log(rejected,\"rejected\");\r\n          this.showErrorMessage = true;\r\n          this.regsisterationReponse = rejected.Message ;\r\n          this.showLoading = false;\r\n          this.registerError = true;\r\n          setTimeout(() => {\r\n            this.showErrorMessage = false ;\r\n          }, 3000);\r\n\r\n        }\r\n      )\r\n     \r\n      \r\n      \r\n    }\r\n    catch(err)\r\n    {\r\n      this.showLoading = false;\r\n      console.error(err) ;\r\n    }\r\n    \r\n  }\r\n\r\n\r\n}\r\n"],"mappings":";;AAAA,SAASA,sBAAsB,EAAEC,SAAS,QAAgB,eAAe;AACzE,SAAiCC,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;AAExF;AACA,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,iBAAiB,QAAQ,6BAA6B;AAC/D,SAASC,iBAAiB,QAAQ,6BAA6B;AAC/D,SAASC,iBAAiB,QAAQ,6BAA6B;AAC/D,SAASC,iBAAiB,QAAQ,6BAA6B;AAC/D,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,gBAAgB,QAAQ,4BAA4B;AAC7D,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,gBAAgB,QAAQ,4BAA4B;AAC7D,SAASC,mBAAmB,QAAQ,+BAA+B;AAGnE,SAASC,YAAY,QAAQ,iBAAiB;AA6BvC,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAW5BC,YAEUC,EAAe,EACfC,MAAuB,EACvBC,MAAe,EACfC,KAAY;IAHZ,KAAAH,EAAE,GAAFA,EAAE;IACF,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;IAdf,KAAAC,KAAK,GAAG,mBAAmB;IAE3B,KAAAC,WAAW,GAAa,KAAK;IAC7B,KAAAC,gBAAgB,GAAa,KAAK;IAClC,KAAAC,qBAAqB,GAAY,IAAI;IACrC,KAAAC,aAAa,GAAa,KAAK;EAa/B;EACAC,QAAQA,CAAA;IAEN,IAAI,CAACC,gBAAgB,EAAE;IACvB,IAAI,CAACC,cAAc,EAAE;EACrB;EACQD,gBAAgBA,CAAA;IAEtB,IAAI,CAACE,WAAW,GAAG,IAAI,CAACZ,EAAE,CAACa,KAAK,CAAC;MAC/BC,YAAY,EAAG,CAAC,EAAE,EAAE,CAACjC,UAAU,CAACkC,QAAQ,CAAC,CAAC;MAC1CC,gBAAgB,EAAG,CAAC,EAAE,EAAE,CAACnC,UAAU,CAACkC,QAAQ,CAAC,CAAC;MAC9CE,aAAa,EAAE,CAAC,EAAE,EAAE,CAACpC,UAAU,CAACkC,QAAQ,EAAElC,UAAU,CAACqC,KAAK,CAAC,CAAC;MAC5DC,gBAAgB,EAAE,CAAC,EAAE,EAAE,CAACtC,UAAU,CAACkC,QAAQ,CAAC;KAC7C,CAAC;EACJ;EACQJ,cAAcA,CAAA;IAEpB,IAAI,CAACS,SAAS,GAAG,IAAI,CAACpB,EAAE,CAACa,KAAK,CAAC;MAC7BQ,SAAS,EAAG,CAAC,EAAE,EAAE,CAACxC,UAAU,CAACkC,QAAQ,CAAC,CAAC;MACvCO,SAAS,EAAG,CAAC,EAAE,EAAE,CAACzC,UAAU,CAACkC,QAAQ,CAAC;KACvC,CAAC;EACJ;EAIIQ,iBAAiBA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAErBD,KAAI,CAACnB,WAAW,GAAG,IAAI;MACvB,IAAIqB,OAAO,GACX;QACEC,IAAI,EAAGH,KAAI,CAACZ,WAAW,CAACgB,QAAQ,CAACd,YAAY,CAACe,KAAK;QACnDC,QAAQ,EAAEN,KAAI,CAACZ,WAAW,CAACgB,QAAQ,CAACZ,gBAAgB,CAACa,KAAK;QAC1DE,SAAS,EAAEP,KAAI,CAACZ,WAAW,CAACgB,QAAQ,CAACX,aAAa,CAACY,KAAK;QACxDG,YAAY,EAAER,KAAI,CAACZ,WAAW,CAACgB,QAAQ,CAACT,gBAAgB,CAACU;OAC1D;MAGD,IACA;QACE,MAAML,KAAI,CAACvB,MAAM,CAACgC,kBAAkB,CAACP,OAAO,CAAC,CAACQ,IAAI,CAE/CC,SAAa,IAAI;UAEhBX,KAAI,CAAClB,gBAAgB,GAAG,IAAI;UAC5BkB,KAAI,CAACjB,qBAAqB,GAAG4B,SAAS,CAACC,OAAO;UAC9CZ,KAAI,CAACnB,WAAW,GAAG,KAAK;UACxBmB,KAAI,CAAChB,aAAa,GAAG,KAAK;QAC5B,CAAC,EACA6B,QAAQ,IAAI;UAEXC,OAAO,CAACC,GAAG,CAACF,QAAQ,EAAC,UAAU,CAAC;UAChCb,KAAI,CAAClB,gBAAgB,GAAG,IAAI;UAC5BkB,KAAI,CAACjB,qBAAqB,GAAG8B,QAAQ,CAACD,OAAO;UAC7CZ,KAAI,CAACnB,WAAW,GAAG,KAAK;UACxBmB,KAAI,CAAChB,aAAa,GAAG,IAAI;QAE3B,CAAC,CACF;QAGDgC,UAAU,CAAC,MAAK;UACdhB,KAAI,CAAClB,gBAAgB,GAAG,KAAK;UAC7BkB,KAAI,CAACtB,MAAM,CAACuC,aAAa,CAAC,eAAe,CAAC;QAC5C,CAAC,EAAE,IAAI,CAAC;OACT,CACD,OAAMC,GAAG,EACT;QACElB,KAAI,CAACnB,WAAW,GAAG,KAAK;QACxBiC,OAAO,CAACK,KAAK,CAACD,GAAG,CAAC;;IACnB;EAOH;EAGME,YAAYA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAApB,iBAAA;MAEhBoB,MAAI,CAACxC,WAAW,GAAG,IAAI;MACvB,IAAIyC,SAAS,GACb;QACEC,UAAU,EAAGF,MAAI,CAACzB,SAAS,CAACQ,QAAQ,CAACP,SAAS,CAACQ,KAAK;QACpDmB,QAAQ,EAAEH,MAAI,CAACzB,SAAS,CAACQ,QAAQ,CAACN,SAAS,CAACO;OAC7C;MAGD,IACA;QACE,MAAMgB,MAAI,CAAC5C,MAAM,CAAC2C,YAAY,CAACE,SAAS,CAAC,CAACZ,IAAI,CAE3CC,SAAa,IAAI;UAEhBU,MAAI,CAACtC,qBAAqB,GAAG4B,SAAS,CAACC,OAAO;UAC9CS,MAAI,CAACxC,WAAW,GAAG,KAAK;UACxBwC,MAAI,CAACrC,aAAa,GAAG,KAAK;UAC1BqC,MAAI,CAAC3C,MAAM,CAACuC,aAAa,CAAC,eAAe,CAAC;QAE5C,CAAC,EACAJ,QAAQ,IAAI;UAEXC,OAAO,CAACC,GAAG,CAACF,QAAQ,EAAC,UAAU,CAAC;UAChCQ,MAAI,CAACvC,gBAAgB,GAAG,IAAI;UAC5BuC,MAAI,CAACtC,qBAAqB,GAAG8B,QAAQ,CAACD,OAAO;UAC7CS,MAAI,CAACxC,WAAW,GAAG,KAAK;UACxBwC,MAAI,CAACrC,aAAa,GAAG,IAAI;UACzBgC,UAAU,CAAC,MAAK;YACdK,MAAI,CAACvC,gBAAgB,GAAG,KAAK;UAC/B,CAAC,EAAE,IAAI,CAAC;QAEV,CAAC,CACF;OAIF,CACD,OAAMoC,GAAG,EACT;QACEG,MAAI,CAACxC,WAAW,GAAG,KAAK;QACxBiC,OAAO,CAACK,KAAK,CAACD,GAAG,CAAC;;IACnB;EAEH;CAGD;AAnJY5C,iBAAiB,GAAAmD,UAAA,EA3B7BtE,SAAS,CAAC;EACTuE,QAAQ,EAAE,eAAe;EACzBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CACPjE,cAAc,EACdP,mBAAmB,EACnBiB,YAAY,EACZf,kBAAkB,EAClBC,iBAAiB,EACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,gBAAgB,EAChBC,cAAc,EACdC,cAAc,EACdC,eAAe,EACfC,kBAAkB,EAClBC,aAAa,EACbC,gBAAgB,EAChBC,mBAAmB,CACpB;EACDyD,WAAW,EAAE,4BAA4B;EACzCC,QAAQ,EAAE,4BAA4B;EACtCC,OAAO,EAAE,CAAC7E,sBAAsB;CACjC,CAAC,C,EACWoB,iBAAiB,CAmJ7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}