{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./services/server/server-api.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"mdb-angular-ui-kit/forms\";\nimport * as i5 from \"mdb-angular-ui-kit/ripple\";\nimport * as i6 from \"mdb-angular-ui-kit/tabs\";\nimport * as i7 from \"mdb-angular-ui-kit/validation\";\nfunction AppComponent_button_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 27);\n    i0.ɵɵtext(1, \" Sign Up \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.ccRegisForm.valid);\n  }\n}\nfunction AppComponent_div_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"div\", 29)(2, \"span\", 30);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport class AppComponent {\n  constructor(fb, server) {\n    this.fb = fb;\n    this.server = server;\n    this.title = 'Welcome to Evallo';\n    this.showLoading = false;\n  }\n  ngOnInit() {\n    this.buildCCRegisForm();\n  }\n  buildCCRegisForm() {\n    this.ccRegisForm = this.fb.group({\n      registerName: ['', [Validators.required]],\n      registerUsername: ['', [Validators.required]],\n      registerEmail: ['', [Validators.required, Validators.email]],\n      registerPassword: ['', [Validators.required]]\n    });\n  }\n  addNewCCForEvallo() {\n    this.showLoading = true;\n    let newUser = {\n      Name: this.ccRegisForm.controls.registerName.value,\n      username: this.ccRegisForm.controls.registerUsername.value,\n      userEmail: this.ccRegisForm.controls.registerEmail.value,\n      userPassword: this.ccRegisForm.controls.registerPassword.value\n    };\n    try {\n      this.server.addNewEvalloCCFunc(newUser);\n    } catch (err) {\n      console.error(err);\n    } finally {\n      this.showLoading = false;\n    }\n    console.log(this.ccRegisForm.value);\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ServerApiService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 42,\n    vars: 5,\n    consts: [[1, \"container\", \"pt-5\"], [1, \"d-flex\", \"justify-content-center\", \"align-items-center\", \"pt-5\"], [1, \"\"], [1, \"text-center\"], [\"src\", \"https://mdbootstrap.com/img/logo/mdb-transparent-250px.png\", 1, \"mb-4\", 2, \"width\", \"180px\"], [1, \"mb-3\", 2, \"text-align\", \"center\"], [1, \"pillSwitcher\"], [3, \"pills\", \"fill\"], [\"title\", \"Login\"], [1, \"mb-4\"], [\"mdbInput\", \"\", \"type\", \"email\", \"id\", \"loginName\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"loginName\", 1, \"form-label\"], [\"mdbInput\", \"\", \"type\", \"password\", \"id\", \"loginPassword\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"loginPassword\", 1, \"form-label\"], [\"mdbRipple\", \"\", \"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mb-4\"], [\"title\", \"Content Creator Registration\"], [3, \"formGroup\", \"ngSubmit\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"text\", \"id\", \"registerName\", \"formControlName\", \"registerName\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerName\", 1, \"form-label\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"text\", \"id\", \"registerUsername\", \"formControlName\", \"registerUsername\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerUsername\", 1, \"form-label\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"email\", \"id\", \"registerEmail\", \"formControlName\", \"registerEmail\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerEmail\", 1, \"form-label\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"password\", \"id\", \"registerPassword\", \"formControlName\", \"registerPassword\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerPassword\", 1, \"form-label\"], [\"mdbRipple\", \"\", \"type\", \"submit\", \"class\", \"btn btn-primary btn-block mb-3\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"row\", \"style\", \"display: flex; \\n                justify-content: center;\", 4, \"ngIf\"], [\"mdbRipple\", \"\", \"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mb-3\", 3, \"disabled\"], [1, \"row\", 2, \"display\", \"flex\", \"justify-content\", \"center\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\", 2, \"display\", \"flex\", \"justify-content\", \"center\"], [1, \"visually-hidden\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵelement(4, \"img\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"h5\", 5);\n        i0.ɵɵtext(6, \"Welcome to Evallo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"hr\");\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"mdb-tabs\", 7)(10, \"mdb-tab\", 8)(11, \"form\")(12, \"mdb-form-control\", 9);\n        i0.ɵɵelement(13, \"input\", 10);\n        i0.ɵɵelementStart(14, \"label\", 11);\n        i0.ɵɵtext(15, \"Email or username\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"mdb-form-control\", 9);\n        i0.ɵɵelement(17, \"input\", 12);\n        i0.ɵɵelementStart(18, \"label\", 13);\n        i0.ɵɵtext(19, \"Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"button\", 14);\n        i0.ɵɵtext(21, \" Sign in \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"mdb-tab\", 15)(23, \"form\", 16);\n        i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_23_listener() {\n          return ctx.addNewCCForEvallo();\n        });\n        i0.ɵɵelementStart(24, \"mdb-form-control\", 9);\n        i0.ɵɵelement(25, \"input\", 17);\n        i0.ɵɵelementStart(26, \"label\", 18);\n        i0.ɵɵtext(27, \"Name\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"mdb-form-control\", 9);\n        i0.ɵɵelement(29, \"input\", 19);\n        i0.ɵɵelementStart(30, \"label\", 20);\n        i0.ɵɵtext(31, \"Username\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"mdb-form-control\", 9);\n        i0.ɵɵelement(33, \"input\", 21);\n        i0.ɵɵelementStart(34, \"label\", 22);\n        i0.ɵɵtext(35, \"Email\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(36, \"mdb-form-control\", 9);\n        i0.ɵɵelement(37, \"input\", 23);\n        i0.ɵɵelementStart(38, \"label\", 24);\n        i0.ɵɵtext(39, \"Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(40, AppComponent_button_40_Template, 2, 1, \"button\", 25)(41, AppComponent_div_41_Template, 4, 0, \"div\", 26);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"pills\", true)(\"fill\", true);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"formGroup\", ctx.ccRegisForm);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngIf\", !ctx.showLoading);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.showLoading);\n      }\n    },\n    dependencies: [i3.NgIf, i4.MdbFormControlComponent, i4.MdbInputDirective, i4.MdbLabelDirective, i5.MdbRippleDirective, i6.MdbTabComponent, i6.MdbTabsComponent, i7.MdbValidateDirective, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","ccRegisForm","valid","AppComponent","constructor","fb","server","title","showLoading","ngOnInit","buildCCRegisForm","group","registerName","required","registerUsername","registerEmail","email","registerPassword","addNewCCForEvallo","newUser","Name","controls","value","username","userEmail","userPassword","addNewEvalloCCFunc","err","console","error","log","_","ɵɵdirectiveInject","i1","FormBuilder","i2","ServerApiService","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","AppComponent_Template_form_ngSubmit_23_listener","ɵɵtemplate","AppComponent_button_40_Template","AppComponent_div_41_Template","ɵɵadvance"],"sources":["F:\\Evallo Project\\mdb-proj\\mdb5-free-angular\\src\\app\\app.component.ts","F:\\Evallo Project\\mdb-proj\\mdb5-free-angular\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserRegistrationModel } from './services/interfaces/interface.service';\nimport { ServerApiService } from './services/server/server-api.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\n\nexport class AppComponent  implements OnInit {\n\n  title = 'Welcome to Evallo';\n  ccRegisForm : FormGroup ;\n  showLoading : boolean = false ;\n\n\n  constructor(private fb: FormBuilder,private server:ServerApiService)\n  {\n\n  }\n\n  ngOnInit(): void {\n    this.buildCCRegisForm();\n  }\n\n \n\n  \n\n  private buildCCRegisForm()\n  {\n    this.ccRegisForm = this.fb.group({\n      registerName : ['', [Validators.required]],\n      registerUsername : ['', [Validators.required]],\n      registerEmail: ['', [Validators.required, Validators.email]],\n      registerPassword: ['', [Validators.required]],\n    });\n  }\n\n  addNewCCForEvallo()\n  {\n    this.showLoading = true ;\n    let newUser : UserRegistrationModel = \n    {\n      Name : this.ccRegisForm.controls.registerName.value,\n      username: this.ccRegisForm.controls.registerUsername.value,\n      userEmail: this.ccRegisForm.controls.registerEmail.value,\n      userPassword: this.ccRegisForm.controls.registerPassword.value\n    }\n    ;\n\n    try\n    {\n      this.server.addNewEvalloCCFunc(newUser)\n    }\n    catch(err)\n    {\n      console.error(err) ;\n    }\n    finally\n    {\n      this.showLoading = false;\n    }\n    \n\n    console.log(this.ccRegisForm.value);\n\n\n\n  }\n\n\n\n}\n","<div class=\"container pt-5\">\n  <div class=\"d-flex justify-content-center align-items-center pt-5\">\n    <div class=\"\">\n      <div class=\"text-center\">\n        <img\n          class=\"mb-4\"\n          src=\"https://mdbootstrap.com/img/logo/mdb-transparent-250px.png\"\n          style=\"width: 180px\"\n        />\n      </div>\n      <h5 class=\"mb-3\" style=\"text-align: center;\">Welcome to Evallo</h5>\n\n  \n   \n      <hr />\n \n\n        <div class=\"pillSwitcher\">\n\n          <mdb-tabs [pills]=\"true\" [fill]=\"true\">\n            <mdb-tab title=\"Login\">\n              <form>\n                                \n                <mdb-form-control class=\"mb-4\">\n                  <input mdbInput type=\"email\" id=\"loginName\" class=\"form-control\" />\n                  <label mdbLabel class=\"form-label\" for=\"loginName\">Email or username</label>\n                </mdb-form-control>\n          \n                <mdb-form-control class=\"mb-4\">\n                  <input mdbInput type=\"password\" id=\"loginPassword\" class=\"form-control\" />\n                  <label mdbLabel class=\"form-label\" for=\"loginPassword\">Password</label>\n                </mdb-form-control>\n          \n                        \n                <button mdbRipple type=\"submit\" class=\"btn btn-primary btn-block mb-4\">\n                  Sign in\n                </button>\n          \n                \n              </form></mdb-tab\n            >\n            <mdb-tab title=\"Content Creator Registration\">\n              <form [formGroup]=\"ccRegisForm\" (ngSubmit)=\"addNewCCForEvallo()\">\n                          \n                <mdb-form-control class=\"mb-4\">\n                  <input mdbValidate mdbInput type=\"text\" id=\"registerName\" class=\"form-control\" formControlName=\"registerName\" />\n                  <label mdbLabel class=\"form-label\" for=\"registerName\">Name</label>\n                </mdb-form-control>\n          \n                <mdb-form-control class=\"mb-4\">\n                  <input mdbValidate mdbInput type=\"text\" id=\"registerUsername\" class=\"form-control\" formControlName=\"registerUsername\" />\n                  <label mdbLabel class=\"form-label\" for=\"registerUsername\">Username</label>\n                </mdb-form-control>\n          \n                <mdb-form-control class=\"mb-4\">\n                  <input mdbValidate mdbInput type=\"email\" id=\"registerEmail\" class=\"form-control\" formControlName=\"registerEmail\" />\n                  <label mdbLabel class=\"form-label\" for=\"registerEmail\">Email</label>\n                </mdb-form-control>\n          \n                <mdb-form-control class=\"mb-4\">\n                  <input mdbValidate mdbInput type=\"password\" id=\"registerPassword\" class=\"form-control\" formControlName=\"registerPassword\" />\n                  <label mdbLabel class=\"form-label\" for=\"registerPassword\">Password</label>\n                </mdb-form-control>\n          \n             \n          \n                <button mdbRipple type=\"submit\" [disabled]=\"!ccRegisForm.valid\" *ngIf=\"!showLoading\"\n                  class=\"btn btn-primary btn-block mb-3\">\n                  Sign Up\n                </button>\n                <div class=\"row\" style=\"display: flex; \n                justify-content: center;\" *ngIf=\"!showLoading\">\n                  <div class=\"spinner-border text-primary\" role=\"status\" style=\"display: flex;justify-content: center;\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                  </div>\n                </div>\n\n                \n              </form></mdb-tab\n            >\n          </mdb-tabs>\n\n\n        </div>\n\n\n\n\n\n\n    </div>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}