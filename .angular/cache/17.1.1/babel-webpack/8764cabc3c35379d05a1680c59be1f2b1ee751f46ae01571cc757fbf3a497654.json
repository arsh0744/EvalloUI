{"ast":null,"code":"import _asyncToGenerator from \"F:/Evallo Project/mdb-proj/mdb5-free-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./services/server/server-api.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"mdb-angular-ui-kit/forms\";\nimport * as i6 from \"mdb-angular-ui-kit/ripple\";\nimport * as i7 from \"mdb-angular-ui-kit/tabs\";\nimport * as i8 from \"mdb-angular-ui-kit/validation\";\nfunction AppComponent_button_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 28);\n    i0.ɵɵtext(1, \" Sign in \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.loginForm.valid);\n  }\n}\nfunction AppComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\", 30)(2, \"span\", 31);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AppComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r2.registerError ? \"text-danger\" : \"text-success\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r2.regsisterationReponse);\n  }\n}\nfunction AppComponent_button_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 33);\n    i0.ɵɵtext(1, \" Sign Up \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r3.ccRegisForm.valid);\n  }\n}\nfunction AppComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\", 30)(2, \"span\", 31);\n    i0.ɵɵtext(3, \"Loading...\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction AppComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(ctx_r5.registerError ? \"text-danger\" : \"text-success\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r5.regsisterationReponse);\n  }\n}\nexport class AppComponent {\n  constructor(fb, server, router) {\n    this.fb = fb;\n    this.server = server;\n    this.router = router;\n    this.title = 'Welcome to Evallo';\n    this.showLoading = false;\n    this.showErrorMessage = false;\n    this.regsisterationReponse = null;\n    this.registerError = false;\n  }\n  ngOnInit() {\n    this.buildCCRegisForm();\n    this.buildLoginForm();\n  }\n  buildCCRegisForm() {\n    this.ccRegisForm = this.fb.group({\n      registerName: ['', [Validators.required]],\n      registerUsername: ['', [Validators.required]],\n      registerEmail: ['', [Validators.required, Validators.email]],\n      registerPassword: ['', [Validators.required]]\n    });\n  }\n  buildLoginForm() {\n    this.loginForm = this.fb.group({\n      loginCred: ['', [Validators.required]],\n      loginPass: ['', [Validators.required]]\n    });\n  }\n  addNewCCForEvallo() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.showLoading = true;\n      let newUser = {\n        Name: _this.ccRegisForm.controls.registerName.value,\n        username: _this.ccRegisForm.controls.registerUsername.value,\n        userEmail: _this.ccRegisForm.controls.registerEmail.value,\n        userPassword: _this.ccRegisForm.controls.registerPassword.value\n      };\n      try {\n        yield _this.server.addNewEvalloCCFunc(newUser).then(fulfilled => {\n          _this.showErrorMessage = true;\n          _this.regsisterationReponse = fulfilled.Message;\n          _this.showLoading = false;\n          _this.registerError = false;\n        }, rejected => {\n          console.log(rejected, \"rejected\");\n          _this.showErrorMessage = true;\n          _this.regsisterationReponse = rejected.Message;\n          _this.showLoading = false;\n          _this.registerError = true;\n        });\n        setTimeout(() => {\n          _this.showErrorMessage = false;\n          _this.router.navigateByUrl('/cc-dashboard');\n        }, 3000);\n      } catch (err) {\n        _this.showLoading = false;\n        console.error(err);\n      }\n    })();\n  }\n  callLoginApi() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.showLoading = true;\n      let userCreds = {\n        identifier: _this2.loginForm.controls.loginCred.value,\n        password: _this2.loginForm.controls.loginPass.value\n      };\n      try {\n        yield _this2.server.callLoginApi(userCreds).then(fulfilled => {\n          _this2.regsisterationReponse = fulfilled.Message;\n          _this2.showLoading = false;\n          _this2.registerError = false;\n          _this2.router.navigateByUrl('/cc-dashboard');\n        }, rejected => {\n          console.log(rejected, \"rejected\");\n          _this2.showErrorMessage = true;\n          _this2.regsisterationReponse = rejected.Message;\n          _this2.showLoading = false;\n          _this2.registerError = true;\n          setTimeout(() => {\n            _this2.showErrorMessage = false;\n          }, 3000);\n        });\n      } catch (err) {\n        _this2.showLoading = false;\n        console.error(err);\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ServerApiService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 44,\n    vars: 10,\n    consts: [[1, \"container\", \"pt-5\"], [1, \"d-flex\", \"justify-content-center\", \"align-items-center\", \"pt-5\"], [1, \"\"], [1, \"text-center\"], [\"src\", \"https://mdbootstrap.com/img/logo/mdb-transparent-250px.png\", 1, \"mb-4\", 2, \"width\", \"180px\"], [1, \"mb-3\", 2, \"text-align\", \"center\"], [1, \"pillSwitcher\"], [3, \"pills\", \"fill\"], [\"title\", \"Login\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-4\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"email\", \"id\", \"loginName\", \"formControlName\", \"loginCred\", 1, \"form-control\"], [\"mdbValidate\", \"\", \"mdbLabel\", \"\", \"for\", \"loginName\", 1, \"form-label\"], [\"mdbInput\", \"\", \"type\", \"password\", \"id\", \"loginPassword\", \"formControlName\", \"loginPass\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"loginPassword\", 1, \"form-label\"], [\"mdbRipple\", \"\", \"type\", \"submit\", \"class\", \"btn btn-primary btn-block mb-4\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"row\", \"style\", \"display: flex; \\n                justify-content: center;\", 4, \"ngIf\"], [\"class\", \"row\", \"style\", \"display: flex; \\n                justify-content: center;text-align: center;\", 4, \"ngIf\"], [\"title\", \"Content Creator Registration\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"text\", \"id\", \"registerName\", \"formControlName\", \"registerName\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerName\", 1, \"form-label\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"text\", \"id\", \"registerUsername\", \"formControlName\", \"registerUsername\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerUsername\", 1, \"form-label\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"email\", \"id\", \"registerEmail\", \"formControlName\", \"registerEmail\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerEmail\", 1, \"form-label\"], [\"mdbValidate\", \"\", \"mdbInput\", \"\", \"type\", \"password\", \"id\", \"registerPassword\", \"formControlName\", \"registerPassword\", 1, \"form-control\"], [\"mdbLabel\", \"\", \"for\", \"registerPassword\", 1, \"form-label\"], [\"mdbRipple\", \"\", \"type\", \"submit\", \"class\", \"btn btn-primary btn-block mb-3\", 3, \"disabled\", 4, \"ngIf\"], [\"mdbRipple\", \"\", \"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mb-4\", 3, \"disabled\"], [1, \"row\", 2, \"display\", \"flex\", \"justify-content\", \"center\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\", 2, \"display\", \"flex\", \"justify-content\", \"center\"], [1, \"visually-hidden\"], [1, \"row\", 2, \"display\", \"flex\", \"justify-content\", \"center\", \"text-align\", \"center\"], [\"mdbRipple\", \"\", \"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mb-3\", 3, \"disabled\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵelement(4, \"img\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"h5\", 5);\n        i0.ɵɵtext(6, \"Welcome to Evallo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"hr\");\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"mdb-tabs\", 7)(10, \"mdb-tab\", 8)(11, \"form\", 9);\n        i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_11_listener() {\n          return ctx.callLoginApi();\n        });\n        i0.ɵɵelementStart(12, \"mdb-form-control\", 10);\n        i0.ɵɵelement(13, \"input\", 11);\n        i0.ɵɵelementStart(14, \"label\", 12);\n        i0.ɵɵtext(15, \"Email or username\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"mdb-form-control\", 10);\n        i0.ɵɵelement(17, \"input\", 13);\n        i0.ɵɵelementStart(18, \"label\", 14);\n        i0.ɵɵtext(19, \"Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(20, AppComponent_button_20_Template, 2, 1, \"button\", 15)(21, AppComponent_div_21_Template, 4, 0, \"div\", 16)(22, AppComponent_div_22_Template, 3, 4, \"div\", 17);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"mdb-tab\", 18)(24, \"form\", 9);\n        i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_24_listener() {\n          return ctx.addNewCCForEvallo();\n        });\n        i0.ɵɵelementStart(25, \"mdb-form-control\", 10);\n        i0.ɵɵelement(26, \"input\", 19);\n        i0.ɵɵelementStart(27, \"label\", 20);\n        i0.ɵɵtext(28, \"Name\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(29, \"mdb-form-control\", 10);\n        i0.ɵɵelement(30, \"input\", 21);\n        i0.ɵɵelementStart(31, \"label\", 22);\n        i0.ɵɵtext(32, \"Username\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"mdb-form-control\", 10);\n        i0.ɵɵelement(34, \"input\", 23);\n        i0.ɵɵelementStart(35, \"label\", 24);\n        i0.ɵɵtext(36, \"Email\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"mdb-form-control\", 10);\n        i0.ɵɵelement(38, \"input\", 25);\n        i0.ɵɵelementStart(39, \"label\", 26);\n        i0.ɵɵtext(40, \"Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(41, AppComponent_button_41_Template, 2, 1, \"button\", 27)(42, AppComponent_div_42_Template, 4, 0, \"div\", 16)(43, AppComponent_div_43_Template, 3, 4, \"div\", 17);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"pills\", true)(\"fill\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.showLoading == false);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.showLoading == true);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.showErrorMessage == true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.ccRegisForm);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngIf\", ctx.showLoading == false);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.showLoading == true);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.showErrorMessage == true);\n      }\n    },\n    dependencies: [i4.NgIf, i5.MdbFormControlComponent, i5.MdbInputDirective, i5.MdbLabelDirective, i6.MdbRippleDirective, i7.MdbTabComponent, i7.MdbTabsComponent, i8.MdbValidateDirective, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","loginForm","valid","ɵɵadvance","ɵɵclassMap","ctx_r2","registerError","ɵɵtextInterpolate","regsisterationReponse","ctx_r3","ccRegisForm","ctx_r5","AppComponent","constructor","fb","server","router","title","showLoading","showErrorMessage","ngOnInit","buildCCRegisForm","buildLoginForm","group","registerName","required","registerUsername","registerEmail","email","registerPassword","loginCred","loginPass","addNewCCForEvallo","_this","_asyncToGenerator","newUser","Name","controls","value","username","userEmail","userPassword","addNewEvalloCCFunc","then","fulfilled","Message","rejected","console","log","setTimeout","navigateByUrl","err","error","callLoginApi","_this2","userCreds","identifier","password","_","ɵɵdirectiveInject","i1","FormBuilder","i2","ServerApiService","i3","Router","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","AppComponent_Template_form_ngSubmit_11_listener","ɵɵtemplate","AppComponent_button_20_Template","AppComponent_div_21_Template","AppComponent_div_22_Template","AppComponent_Template_form_ngSubmit_24_listener","AppComponent_button_41_Template","AppComponent_div_42_Template","AppComponent_div_43_Template"],"sources":["F:\\Evallo Project\\mdb-proj\\mdb5-free-angular\\src\\app\\app.component.ts","F:\\Evallo Project\\mdb-proj\\mdb5-free-angular\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserRegistrationModel } from './services/interfaces/interface.service';\nimport { ServerApiService } from './services/server/server-api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\n\nexport class AppComponent  implements OnInit {\n\n  title = 'Welcome to Evallo';\n  ccRegisForm : FormGroup ;\n  showLoading : boolean = false ;\n  showErrorMessage : boolean = false;\n  regsisterationReponse : string = null;\n  registerError : boolean = false ;\n\n  loginForm : FormGroup;\n\n\n  constructor(\n    private fb: FormBuilder,\n    private server:ServerApiService,\n    private router : Router\n    )\n  {\n\n  }\n\n  ngOnInit(): void {\n    this.buildCCRegisForm();\n    this.buildLoginForm();\n  }\n\n \n\n  \n\n  private buildCCRegisForm()\n  {\n    this.ccRegisForm = this.fb.group({\n      registerName : ['', [Validators.required]],\n      registerUsername : ['', [Validators.required]],\n      registerEmail: ['', [Validators.required, Validators.email]],\n      registerPassword: ['', [Validators.required]],\n    });\n  }\n  private buildLoginForm()\n  {\n    this.loginForm = this.fb.group({\n      loginCred : ['', [Validators.required]],\n      loginPass : ['', [Validators.required]],\n    });\n  }\n\n  async addNewCCForEvallo()\n  {\n    this.showLoading = true ;\n    let newUser : UserRegistrationModel = \n    {\n      Name : this.ccRegisForm.controls.registerName.value,\n      username: this.ccRegisForm.controls.registerUsername.value,\n      userEmail: this.ccRegisForm.controls.registerEmail.value,\n      userPassword: this.ccRegisForm.controls.registerPassword.value\n    }\n    ;\n\n    try\n    {\n      await this.server.addNewEvalloCCFunc(newUser).then\n      (\n        (fulfilled:any) =>\n        {\n          this.showErrorMessage = true;\n          this.regsisterationReponse = fulfilled.Message ;\n          this.showLoading = false;\n          this.registerError = false;\n        },\n        (rejected) =>\n        {\n          console.log(rejected,\"rejected\");\n          this.showErrorMessage = true;\n          this.regsisterationReponse = rejected.Message ;\n          this.showLoading = false;\n          this.registerError = true;\n\n        }\n      )\n     \n      \n      setTimeout(() => {\n        this.showErrorMessage = false ;\n        this.router.navigateByUrl('/cc-dashboard')\n      }, 3000);\n    }\n    catch(err)\n    {\n      this.showLoading = false;\n      console.error(err) ;\n    }\n  \n    \n\n\n\n\n  }\n\n  async callLoginApi()\n  {\n    this.showLoading = true ;\n    let userCreds = \n    {\n      identifier : this.loginForm.controls.loginCred.value,\n      password: this.loginForm.controls.loginPass.value\n    }\n    ;\n\n    try\n    {\n      await this.server.callLoginApi(userCreds).then\n      (\n        (fulfilled:any) =>\n        {\n          this.regsisterationReponse = fulfilled.Message ;\n          this.showLoading = false;\n          this.registerError = false;\n          this.router.navigateByUrl('/cc-dashboard')\n\n        },\n        (rejected) =>\n        {\n          console.log(rejected,\"rejected\");\n          this.showErrorMessage = true;\n          this.regsisterationReponse = rejected.Message ;\n          this.showLoading = false;\n          this.registerError = true;\n          setTimeout(() => {\n            this.showErrorMessage = false ;\n          }, 3000);\n\n        }\n      )\n     \n      \n      \n    }\n    catch(err)\n    {\n      this.showLoading = false;\n      console.error(err) ;\n    }\n    \n  }\n\n\n\n}\n","<div class=\"container pt-5\">\n  <div class=\"d-flex justify-content-center align-items-center pt-5\">\n    <div class=\"\">\n      <div class=\"text-center\">\n        <img\n          class=\"mb-4\"\n          src=\"https://mdbootstrap.com/img/logo/mdb-transparent-250px.png\"\n          style=\"width: 180px\"\n        />\n      </div>\n      <h5 class=\"mb-3\" style=\"text-align: center;\">Welcome to Evallo</h5>\n\n  \n   \n      <hr />\n \n\n        <div class=\"pillSwitcher\">\n\n          <mdb-tabs [pills]=\"true\" [fill]=\"true\">\n            <mdb-tab title=\"Login\">\n              <form [formGroup]=\"loginForm\" (ngSubmit)=\"callLoginApi()\">\n                                \n                <mdb-form-control class=\"mb-4\">\n                  <input mdbValidate mdbInput type=\"email\" id=\"loginName\" class=\"form-control\" formControlName=\"loginCred\" />\n                  <label mdbValidate mdbLabel class=\"form-label\" for=\"loginName\">Email or username</label>\n                </mdb-form-control>\n          \n                <mdb-form-control class=\"mb-4\">\n                  <input mdbInput type=\"password\" id=\"loginPassword\" class=\"form-control\" formControlName=\"loginPass\"/>\n                  <label mdbLabel class=\"form-label\" for=\"loginPassword\">Password</label>\n                </mdb-form-control>\n          \n                        \n                <button mdbRipple [disabled]=\"!loginForm.valid\" *ngIf=\"showLoading==false\"\n                 type=\"submit\" class=\"btn btn-primary btn-block mb-4\">\n                  Sign in\n                </button>\n                <div class=\"row\" style=\"display: flex; \n                justify-content: center;\" *ngIf=\"showLoading==true\">\n                  <div class=\"spinner-border text-primary\" role=\"status\" style=\"display: flex;justify-content: center;\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                  </div>\n                </div>\n                <div class=\"row\" style=\"display: flex; \n                justify-content: center;text-align: center;\" *ngIf=\"showErrorMessage==true\" >\n                  \n                    <span class=\"{{registerError?'text-danger':'text-success'}}\">{{regsisterationReponse}}</span>\n                  \n                </div>\n          \n                \n              </form></mdb-tab\n            >\n            <mdb-tab title=\"Content Creator Registration\">\n              <form [formGroup]=\"ccRegisForm\" (ngSubmit)=\"addNewCCForEvallo()\">\n                          \n                <mdb-form-control class=\"mb-4\">\n                  <input mdbValidate mdbInput type=\"text\" id=\"registerName\" class=\"form-control\" formControlName=\"registerName\" />\n                  <label mdbLabel class=\"form-label\" for=\"registerName\">Name</label>\n                </mdb-form-control>\n          \n                <mdb-form-control class=\"mb-4\">\n                  <input mdbValidate mdbInput type=\"text\" id=\"registerUsername\" class=\"form-control\" formControlName=\"registerUsername\" />\n                  <label mdbLabel class=\"form-label\" for=\"registerUsername\">Username</label>\n                </mdb-form-control>\n          \n                <mdb-form-control class=\"mb-4\">\n                  <input mdbValidate mdbInput type=\"email\" id=\"registerEmail\" class=\"form-control\" formControlName=\"registerEmail\" />\n                  <label mdbLabel class=\"form-label\" for=\"registerEmail\">Email</label>\n                </mdb-form-control>\n          \n                <mdb-form-control class=\"mb-4\" >\n                  <input mdbValidate mdbInput type=\"password\" id=\"registerPassword\" class=\"form-control\" formControlName=\"registerPassword\" />\n                  <label mdbLabel class=\"form-label\" for=\"registerPassword\">Password</label>\n                </mdb-form-control>\n          \n             \n          \n                <button mdbRipple type=\"submit\" [disabled]=\"!ccRegisForm.valid\" *ngIf=\"showLoading==false\"\n                  class=\"btn btn-primary btn-block mb-3\">\n                  Sign Up\n                </button>\n                <div class=\"row\" style=\"display: flex; \n                justify-content: center;\" *ngIf=\"showLoading==true\">\n                  <div class=\"spinner-border text-primary\" role=\"status\" style=\"display: flex;justify-content: center;\">\n                    <span class=\"visually-hidden\">Loading...</span>\n                  </div>\n                </div>\n                <div class=\"row\" style=\"display: flex; \n                justify-content: center;text-align: center;\" *ngIf=\"showErrorMessage==true\" >\n                  \n                    <span class=\"{{registerError?'text-danger':'text-success'}}\">{{regsisterationReponse}}</span>\n                  \n                </div>\n\n                \n              </form></mdb-tab\n            >\n          </mdb-tabs>\n\n\n        </div>\n\n\n\n\n\n\n    </div>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}