{"ast":null,"code":"import _asyncToGenerator from \"F:/Evallo Project/mdb-proj/mdb5-free-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { CUSTOM_ELEMENTS_SCHEMA, Component } from '@angular/core';\nimport { MdbFormsModule } from 'mdb-angular-ui-kit/forms';\nlet MainPageComponent = class MainPageComponent {\n  constructor(fb, server, router) {\n    this.fb = fb;\n    this.server = server;\n    this.router = router;\n    this.title = 'Welcome to Evallo';\n    this.showLoading = false;\n    this.showErrorMessage = false;\n    this.regsisterationReponse = null;\n    this.registerError = false;\n  }\n  addNewCCForEvallo() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.showLoading = true;\n      let newUser = {\n        Name: _this.ccRegisForm.controls.registerName.value,\n        username: _this.ccRegisForm.controls.registerUsername.value,\n        userEmail: _this.ccRegisForm.controls.registerEmail.value,\n        userPassword: _this.ccRegisForm.controls.registerPassword.value\n      };\n      try {\n        yield _this.server.addNewEvalloCCFunc(newUser).then(fulfilled => {\n          _this.showErrorMessage = true;\n          _this.regsisterationReponse = fulfilled.Message;\n          _this.showLoading = false;\n          _this.registerError = false;\n        }, rejected => {\n          console.log(rejected, \"rejected\");\n          _this.showErrorMessage = true;\n          _this.regsisterationReponse = rejected.Message;\n          _this.showLoading = false;\n          _this.registerError = true;\n        });\n        setTimeout(() => {\n          _this.showErrorMessage = false;\n          _this.router.navigateByUrl('/cc-dashboard');\n        }, 3000);\n      } catch (err) {\n        _this.showLoading = false;\n        console.error(err);\n      }\n    })();\n  }\n  callLoginApi() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.showLoading = true;\n      let userCreds = {\n        identifier: _this2.loginForm.controls.loginCred.value,\n        password: _this2.loginForm.controls.loginPass.value\n      };\n      try {\n        yield _this2.server.callLoginApi(userCreds).then(fulfilled => {\n          _this2.regsisterationReponse = fulfilled.Message;\n          _this2.showLoading = false;\n          _this2.registerError = false;\n          _this2.router.navigateByUrl('/cc-dashboard');\n        }, rejected => {\n          console.log(rejected, \"rejected\");\n          _this2.showErrorMessage = true;\n          _this2.regsisterationReponse = rejected.Message;\n          _this2.showLoading = false;\n          _this2.registerError = true;\n          setTimeout(() => {\n            _this2.showErrorMessage = false;\n          }, 3000);\n        });\n      } catch (err) {\n        _this2.showLoading = false;\n        console.error(err);\n      }\n    })();\n  }\n};\nMainPageComponent = __decorate([Component({\n  selector: 'app-main-page',\n  standalone: true,\n  imports: [MdbFormsModule],\n  templateUrl: './main-page.component.html',\n  styleUrl: './main-page.component.scss',\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})], MainPageComponent);\nexport { MainPageComponent };","map":{"version":3,"names":["CUSTOM_ELEMENTS_SCHEMA","Component","MdbFormsModule","MainPageComponent","constructor","fb","server","router","title","showLoading","showErrorMessage","regsisterationReponse","registerError","addNewCCForEvallo","_this","_asyncToGenerator","newUser","Name","ccRegisForm","controls","registerName","value","username","registerUsername","userEmail","registerEmail","userPassword","registerPassword","addNewEvalloCCFunc","then","fulfilled","Message","rejected","console","log","setTimeout","navigateByUrl","err","error","callLoginApi","_this2","userCreds","identifier","loginForm","loginCred","password","loginPass","__decorate","selector","standalone","imports","templateUrl","styleUrl","schemas"],"sources":["F:\\Evallo Project\\mdb-proj\\mdb5-free-angular\\src\\app\\main-page\\main-page.component.ts"],"sourcesContent":["import { CUSTOM_ELEMENTS_SCHEMA, Component } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n// MDB Modules\r\nimport { MdbAccordionModule } from 'mdb-angular-ui-kit/accordion';\r\nimport { MdbCarouselModule } from 'mdb-angular-ui-kit/carousel';\r\nimport { MdbCheckboxModule } from 'mdb-angular-ui-kit/checkbox';\r\nimport { MdbCollapseModule } from 'mdb-angular-ui-kit/collapse';\r\nimport { MdbDropdownModule } from 'mdb-angular-ui-kit/dropdown';\r\nimport { MdbFormsModule } from 'mdb-angular-ui-kit/forms';\r\nimport { MdbModalModule } from 'mdb-angular-ui-kit/modal';\r\nimport { MdbPopoverModule } from 'mdb-angular-ui-kit/popover';\r\nimport { MdbRadioModule } from 'mdb-angular-ui-kit/radio';\r\nimport { MdbRangeModule } from 'mdb-angular-ui-kit/range';\r\nimport { MdbRippleModule } from 'mdb-angular-ui-kit/ripple';\r\nimport { MdbScrollspyModule } from 'mdb-angular-ui-kit/scrollspy';\r\nimport { MdbTabsModule } from 'mdb-angular-ui-kit/tabs';\r\nimport { MdbTooltipModule } from 'mdb-angular-ui-kit/tooltip';\r\nimport { MdbValidationModule } from 'mdb-angular-ui-kit/validation';\r\n\r\n@Component({\r\n  selector: 'app-main-page',\r\n  standalone: true,\r\n  imports: [\r\n    MdbFormsModule\r\n  ],\r\n  templateUrl: './main-page.component.html',\r\n  styleUrl: './main-page.component.scss',\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class MainPageComponent {\r\n\r\n  title = 'Welcome to Evallo';\r\n  ccRegisForm : FormGroup ;\r\n  showLoading : boolean = false ;\r\n  showErrorMessage : boolean = false;\r\n  regsisterationReponse : string = null;\r\n  registerError : boolean = false ;\r\n\r\n  loginForm : FormGroup;\r\n\r\n  constructor\r\n  (\r\n    private fb: FormBuilder,\r\n    private server:ServerApiService,\r\n    private router : Router\r\n  )\r\n  {\r\n\r\n  }\r\n\r\n\r\n\r\n  async addNewCCForEvallo()\r\n  {\r\n    this.showLoading = true ;\r\n    let newUser : UserRegistrationModel = \r\n    {\r\n      Name : this.ccRegisForm.controls.registerName.value,\r\n      username: this.ccRegisForm.controls.registerUsername.value,\r\n      userEmail: this.ccRegisForm.controls.registerEmail.value,\r\n      userPassword: this.ccRegisForm.controls.registerPassword.value\r\n    }\r\n    ;\r\n\r\n    try\r\n    {\r\n      await this.server.addNewEvalloCCFunc(newUser).then\r\n      (\r\n        (fulfilled:any) =>\r\n        {\r\n          this.showErrorMessage = true;\r\n          this.regsisterationReponse = fulfilled.Message ;\r\n          this.showLoading = false;\r\n          this.registerError = false;\r\n        },\r\n        (rejected) =>\r\n        {\r\n          console.log(rejected,\"rejected\");\r\n          this.showErrorMessage = true;\r\n          this.regsisterationReponse = rejected.Message ;\r\n          this.showLoading = false;\r\n          this.registerError = true;\r\n\r\n        }\r\n      )\r\n     \r\n      \r\n      setTimeout(() => {\r\n        this.showErrorMessage = false ;\r\n        this.router.navigateByUrl('/cc-dashboard')\r\n      }, 3000);\r\n    }\r\n    catch(err)\r\n    {\r\n      this.showLoading = false;\r\n      console.error(err) ;\r\n    }\r\n  \r\n    \r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  async callLoginApi()\r\n  {\r\n    this.showLoading = true ;\r\n    let userCreds = \r\n    {\r\n      identifier : this.loginForm.controls.loginCred.value,\r\n      password: this.loginForm.controls.loginPass.value\r\n    }\r\n    ;\r\n\r\n    try\r\n    {\r\n      await this.server.callLoginApi(userCreds).then\r\n      (\r\n        (fulfilled:any) =>\r\n        {\r\n          this.regsisterationReponse = fulfilled.Message ;\r\n          this.showLoading = false;\r\n          this.registerError = false;\r\n          this.router.navigateByUrl('/cc-dashboard')\r\n\r\n        },\r\n        (rejected) =>\r\n        {\r\n          console.log(rejected,\"rejected\");\r\n          this.showErrorMessage = true;\r\n          this.regsisterationReponse = rejected.Message ;\r\n          this.showLoading = false;\r\n          this.registerError = true;\r\n          setTimeout(() => {\r\n            this.showErrorMessage = false ;\r\n          }, 3000);\r\n\r\n        }\r\n      )\r\n     \r\n      \r\n      \r\n    }\r\n    catch(err)\r\n    {\r\n      this.showLoading = false;\r\n      console.error(err) ;\r\n    }\r\n    \r\n  }\r\n\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}